{"ast":null,"code":"var _jsxFileName = \"/home/himanshu/Desktop/24hack.it/healthcare/client/src/components/plans/PlanShow.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchplan } from \"../../actions/index\";\nimport FitnessVideos from \"./FitnessVideos\";\nimport FoodDetails from \"./FoodDetailsWhenCalled\";\nimport UserDetails from \"./UserDetails\";\n\nconst bodyMassIndex = require(\"body-mass-index\");\n\nconst axios = require(\"axios\");\n\nclass PlanShow extends React.Component {\n  // state = {\n  // \tinputfoodvalue: null,\n  // \tinputvalueforfooddetails: null,\n  // \tbmi: 0,\n  // \tAge: 0,\n  // \tWeight: 0,\n  // \tHeight: 0,\n  // \tName: 0,\n  // \tSex: 0,\n  // \tPlan  : 0,\n  // \twaist: 0,\n  // \thip: 0,\n  // \ttypeOfPerson: 0 ,\n  // \tdiseaseRisk: 0\n  // };\n  componentDidMount() {\n    this.props.fetchplan(this.props.match.params.id);\n  } // getUserDetails() {\n  // if (!this.props.plan) {\n  // \t\treturn <div>Loading</div>;\n  // \t}\n  // \tthis.setState({\n  // \t\tPlan: this.props.plan.Plan,\n  // \t\tAge: this.props.plan.Age,\n  // \t\tWeight: this.props.plan.Weight,\n  // \t\tHeight: this.props.plan.Height,\n  // \t\tName: this.props.plan.Name,\n  // \t\tSex: this.props.plan.Sex,\n  // \t\twaist: this.props.plan.waist,\n  // \t\thip: this.props.plan.hip\n  // \t});\n  // \t{\n  // \t\tconst bmi = bodyMassIndex(\n  // \t\t\t`${this.state.Weight} kg`,\n  // \t\t\t`${this.state.Height} cm`\n  // \t\t);\n  // \t\tif (bmi < 18.5) {\n  // \t\t\tthis.setState({ typeOfPerson: \"Underweight\" });\n  // \t\t\tthis.setState({ diseaseRisk: \"No Risk \" });\n  // \t\t}\n  // \t\tif (bmi > 18.5 && bmi < 24.9) {\n  // \t\t\tthis.setState({ typeOfPerson: \"Normal\" });\n  // \t\t\tthis.setState({ diseaseRisk: \"No Risk\" });\n  // \t\t}\n  // \t\tif (bmi > 25.0 && bmi < 29.9) {\n  // \t\t\tthis.setState({ typeOfPerson: \"Overweight\" });\n  // \t\t\tif (\n  // \t\t\t\t(this.state.Sex == \"m\" && this.state.waist <= 40) ||\n  // \t\t\t\t(this.state.Sex == \"f\" && this.state.waist <= 35)\n  // \t\t\t) {\n  // \t\t\t\tthis.setState({ diseaseRisk: \"Increased\" });\n  // \t\t\t}\n  // \t\t\tif (\n  // \t\t\t\t(this.state.Sex == \"m\" && this.state.waist >= 40) ||\n  // \t\t\t\t(this.state.Sex == \"f\" && this.state.waist >= 35)\n  // \t\t\t) {\n  // \t\t\t\tthis.setState({ diseaseRisk: \"High \" });\n  // \t\t\t}\n  // \t\t}\n  // \t\tif (bmi > 30.0 && bmi < 34.9) {\n  // \t\t\tthis.setState({ typeOfPerson: \"Obesity class I\" });\n  // \t\t\tif (\n  // \t\t\t\t(this.state.Sex == \"m\" && this.state.waist <= 40) ||\n  // \t\t\t\t(this.state.Sex == \"f\" && this.state.waist <= 35)\n  // \t\t\t) {\n  // \t\t\t\tthis.setState({ diseaseRisk: \"high \" });\n  // \t\t\t}\n  // \t\t\tif (\n  // \t\t\t\t(this.state.Sex == \"m\" && this.state.waist >= 40) ||\n  // \t\t\t\t(this.state.Sex == \"f\" && this.state.waist >= 35)\n  // \t\t\t) {\n  // \t\t\t\tthis.setState({ diseaseRisk: \"Very high\" });\n  // \t\t\t}\n  // \t\t}\n  // \t\tif (bmi > 35.0 && bmi < 39.9) {\n  // \t\t\tthis.setState({ typeOfPerson: \"Obesity class II\" });\n  // \t\t\tif (\n  // \t\t\t\t(this.state.Sex == \"m\" && this.state.waist <= 40) ||\n  // \t\t\t\t(this.state.Sex == \"f\" && this.state.waist <= 35)\n  // \t\t\t) {\n  // \t\t\t\tthis.setState({ diseaseRisk: \"very High\" });\n  // \t\t\t}\n  // \t\t\tif (\n  // \t\t\t\t(this.state.Sex == \"m\" && this.state.waist >= 40) ||\n  // \t\t\t\t(this.state.Sex == \"f\" && this.state.waist >= 35)\n  // \t\t\t) {\n  // \t\t\t\tthis.setState({ diseaseRisk: \"very high\" });\n  // \t\t\t}\n  // \t\t}\n  // \t\tif (bmi > 40) {\n  // \t\t\tthis.setState({ typeOfPerson: \"Extreme Obesity\" });\n  // \t\t\tif (\n  // \t\t\t\t(this.state.Sex == \"m\" && this.state.waist <= 40) ||\n  // \t\t\t\t(this.state.Sex == \"f\" && this.state.waist <= 35)\n  // \t\t\t) {\n  // \t\t\t\tthis.setState({ diseaseRisk: \"Extreme High\" });\n  // \t\t\t}\n  // \t\t\tif (\n  // \t\t\t\t(this.state.Sex == \"m\" && this.state.waist <= 40) ||\n  // \t\t\t\t(this.state.Sex == \"f\" && this.state.waist <= 35)\n  // \t\t\t) {\n  // \t\t\t\tthis.setState({ diseaseRisk: \"Extreme High\" });\n  // \t\t\t}\n  // \t\t}\n  // \t}\n  // }\n  // renderDetails() {\n  // \treturn (\n  // \t\t<div className='ui segments'>\n  // \t\t\t<div className='ui segment'>\n  // \t\t\t\t<p>Plan:{this.state.Plan}</p>\n  // \t\t\t</div>\n  // \t\t\t<div className='ui red segment'>\n  // \t\t\t\t<p>Name:{this.state.Name}</p>\n  // \t\t\t</div>\n  // \t\t\t<div className='ui blue segment'>\n  // \t\t\t\t{\" \"}\n  // \t\t\t\t<p>Age(in yrs):{this.state.Age}</p>\n  // \t\t\t</div>\n  // \t\t\t<div className='ui green segment'>\n  // \t\t\t\t{\" \"}\n  // \t\t\t\t<p>Weight(in KG):{this.state.Weight}</p>\n  // \t\t\t</div>\n  // \t\t\t<div className='ui yellow segment'>\n  // \t\t\t\t<p> Height(in cm):{this.state.Height}</p>\n  // \t\t\t</div>\n  // \t\t\t<div className='ui yellow segment'>\n  // \t\t\t\t<p> Waist(in cm): {this.state.waist}</p>\n  // \t\t\t</div>\n  // \t\t\t<div className='ui yellow segment'>\n  // \t\t\t\t<p>Hip(in cm):{this.state.hip}</p>\n  // \t\t\t</div>\n  // \t\t\t<div className='ui yellow segment'>\n  // \t\t\t\t<p>gender: {this.state.Sex}</p>\n  // \t\t\t</div>\n  // \t\t\t<div className='ui blue segment'>\n  // \t\t\t\t<p>BMI: {this.state.bmi}</p>\n  // \t\t\t</div>\n  // \t\t\t<div className='ui blue segment'>\n  // \t\t\t\t<p>According to BMI: {this.state.typeOfPerson}</p>\n  // \t\t\t</div>\n  // \t\t\t<div className='ui blue segment'>\n  // \t\t\t\t<p>\n  // \t\t\t\t\tDisease Risk (like type 2 diabetes,hypertension,CVD):{\" \"}\n  // \t\t\t\t\t{this.state.diseaseRisk}\n  // \t\t\t\t</p>\n  // \t\t\t</div>\n  // \t\t\t{this.getUserDetails()}\n  // \t\t</div>\n  // \t);\n  // }\n  // helpplease = () => {\n  // \tif (document.getElementById(\"inputvalueforfooddetails\").value != null) {\n  // \t\tthis.setState({\n  // \t\t\tinputvalueforfooddetails: document.getElementById(\n  // \t\t\t\t\"inputvalueforfooddetails\"\n  // \t\t\t).value\n  // \t\t});\n  // \t}\n  // };\n  // renderHelper() {\n  // \treturn (\n  // \t\t<div>\n  // \t\t\t<label>Food Details</label>\n  // \t\t\t<input type='text' id='inputvalueforfooddetails'></input>\n  // \t\t\t<button onClick={this.helpplease}>submit</button>\n  // \t\t</div>\n  // \t);\n  // }\n\n\n  render() {\n    if (!this.props.plan) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, \"Loading\");\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, React.createElement(UserDetails, {\n      data: this.props.plan,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    plan: state.plans[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchplan\n})(PlanShow);","map":{"version":3,"sources":["/home/himanshu/Desktop/24hack.it/healthcare/client/src/components/plans/PlanShow.js"],"names":["React","connect","fetchplan","FitnessVideos","FoodDetails","UserDetails","bodyMassIndex","require","axios","PlanShow","Component","componentDidMount","props","match","params","id","render","plan","mapStateToProps","state","ownProps","plans"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,QAA0B,qBAA1B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AACA,MAAMC,aAAa,GAAGC,OAAO,CAAC,iBAAD,CAA7B;;AACA,MAAMC,KAAK,GAAGD,OAAO,CAAC,OAAD,CAArB;;AACA,MAAME,QAAN,SAAuBT,KAAK,CAACU,SAA7B,CAAuC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,EAAAA,iBAAiB,GAAG;AACnB,SAAKC,KAAL,CAAWV,SAAX,CAAqB,KAAKU,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA7C;AAEA,GAnBqC,CAoBthB,EAAsB;AACrB,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAP;AACA;;AACD,WACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,WAAD;AAAa,MAAA,IAAI,EAAE,KAAKL,KAAL,CAAWK,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CADD;AAKA;;AAxLqC;;AA0LvC,MAAMC,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC5C,SAAO;AACNH,IAAAA,IAAI,EAAEE,KAAK,CAACE,KAAN,CAAYD,QAAQ,CAACP,KAAT,CAAeC,MAAf,CAAsBC,EAAlC;AADA,GAAP;AAGA,CAJD;;AAKA,eAAed,OAAO,CACrBiB,eADqB,EAErB;AAAEhB,EAAAA;AAAF,CAFqB,CAAP,CAGbO,QAHa,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchplan } from \"../../actions/index\";\nimport FitnessVideos from \"./FitnessVideos\";\nimport FoodDetails from \"./FoodDetailsWhenCalled\";\nimport UserDetails from \"./UserDetails\";\nconst bodyMassIndex = require(\"body-mass-index\");\nconst axios = require(\"axios\");\nclass PlanShow extends React.Component {\n\t// state = {\n\t// \tinputfoodvalue: null,\n\t// \tinputvalueforfooddetails: null,\n\t// \tbmi: 0,\n\t// \tAge: 0,\n\t// \tWeight: 0,\n\t// \tHeight: 0,\n\t// \tName: 0,\n\t// \tSex: 0,\n\t// \tPlan  : 0,\n\t// \twaist: 0,\n\t// \thip: 0,\n\t// \ttypeOfPerson: 0 ,\n\t// \tdiseaseRisk: 0\n\t// };\n\tcomponentDidMount() {\n\t\tthis.props.fetchplan(this.props.match.params.id);\n\t\n\t}\n\t// getUserDetails() {\n\t// if (!this.props.plan) {\n\t// \t\treturn <div>Loading</div>;\n\t// \t}\n\t\n\t// \tthis.setState({\n\t// \t\tPlan: this.props.plan.Plan,\n\t// \t\tAge: this.props.plan.Age,\n\t// \t\tWeight: this.props.plan.Weight,\n\t// \t\tHeight: this.props.plan.Height,\n\t// \t\tName: this.props.plan.Name,\n\t// \t\tSex: this.props.plan.Sex,\n\t// \t\twaist: this.props.plan.waist,\n\t// \t\thip: this.props.plan.hip\n\t// \t});\n\n\t// \t{\n\t// \t\tconst bmi = bodyMassIndex(\n\t// \t\t\t`${this.state.Weight} kg`,\n\t// \t\t\t`${this.state.Height} cm`\n\t// \t\t);\n\n\t// \t\tif (bmi < 18.5) {\n\t// \t\t\tthis.setState({ typeOfPerson: \"Underweight\" });\n\t// \t\t\tthis.setState({ diseaseRisk: \"No Risk \" });\n\t// \t\t}\n\t// \t\tif (bmi > 18.5 && bmi < 24.9) {\n\t// \t\t\tthis.setState({ typeOfPerson: \"Normal\" });\n\t// \t\t\tthis.setState({ diseaseRisk: \"No Risk\" });\n\t// \t\t}\n\t// \t\tif (bmi > 25.0 && bmi < 29.9) {\n\t// \t\t\tthis.setState({ typeOfPerson: \"Overweight\" });\n\t// \t\t\tif (\n\t// \t\t\t\t(this.state.Sex == \"m\" && this.state.waist <= 40) ||\n\t// \t\t\t\t(this.state.Sex == \"f\" && this.state.waist <= 35)\n\t// \t\t\t) {\n\t// \t\t\t\tthis.setState({ diseaseRisk: \"Increased\" });\n\t// \t\t\t}\n\t// \t\t\tif (\n\t// \t\t\t\t(this.state.Sex == \"m\" && this.state.waist >= 40) ||\n\t// \t\t\t\t(this.state.Sex == \"f\" && this.state.waist >= 35)\n\t// \t\t\t) {\n\t// \t\t\t\tthis.setState({ diseaseRisk: \"High \" });\n\t// \t\t\t}\n\t// \t\t}\n\t// \t\tif (bmi > 30.0 && bmi < 34.9) {\n\t// \t\t\tthis.setState({ typeOfPerson: \"Obesity class I\" });\n\t// \t\t\tif (\n\t// \t\t\t\t(this.state.Sex == \"m\" && this.state.waist <= 40) ||\n\t// \t\t\t\t(this.state.Sex == \"f\" && this.state.waist <= 35)\n\t// \t\t\t) {\n\t// \t\t\t\tthis.setState({ diseaseRisk: \"high \" });\n\t// \t\t\t}\n\t// \t\t\tif (\n\t// \t\t\t\t(this.state.Sex == \"m\" && this.state.waist >= 40) ||\n\t// \t\t\t\t(this.state.Sex == \"f\" && this.state.waist >= 35)\n\t// \t\t\t) {\n\t// \t\t\t\tthis.setState({ diseaseRisk: \"Very high\" });\n\t// \t\t\t}\n\t// \t\t}\n\t// \t\tif (bmi > 35.0 && bmi < 39.9) {\n\t// \t\t\tthis.setState({ typeOfPerson: \"Obesity class II\" });\n\t// \t\t\tif (\n\t// \t\t\t\t(this.state.Sex == \"m\" && this.state.waist <= 40) ||\n\t// \t\t\t\t(this.state.Sex == \"f\" && this.state.waist <= 35)\n\t// \t\t\t) {\n\t// \t\t\t\tthis.setState({ diseaseRisk: \"very High\" });\n\t// \t\t\t}\n\t// \t\t\tif (\n\t// \t\t\t\t(this.state.Sex == \"m\" && this.state.waist >= 40) ||\n\t// \t\t\t\t(this.state.Sex == \"f\" && this.state.waist >= 35)\n\t// \t\t\t) {\n\t// \t\t\t\tthis.setState({ diseaseRisk: \"very high\" });\n\t// \t\t\t}\n\t// \t\t}\n\t// \t\tif (bmi > 40) {\n\t// \t\t\tthis.setState({ typeOfPerson: \"Extreme Obesity\" });\n\t// \t\t\tif (\n\t// \t\t\t\t(this.state.Sex == \"m\" && this.state.waist <= 40) ||\n\t// \t\t\t\t(this.state.Sex == \"f\" && this.state.waist <= 35)\n\t// \t\t\t) {\n\t// \t\t\t\tthis.setState({ diseaseRisk: \"Extreme High\" });\n\t// \t\t\t}\n\t// \t\t\tif (\n\t// \t\t\t\t(this.state.Sex == \"m\" && this.state.waist <= 40) ||\n\t// \t\t\t\t(this.state.Sex == \"f\" && this.state.waist <= 35)\n\t// \t\t\t) {\n\t// \t\t\t\tthis.setState({ diseaseRisk: \"Extreme High\" });\n\t// \t\t\t}\n\t// \t\t}\n\t// \t}\n\t// }\n\t// renderDetails() {\n\t// \treturn (\n\t// \t\t<div className='ui segments'>\n\t// \t\t\t<div className='ui segment'>\n\t// \t\t\t\t<p>Plan:{this.state.Plan}</p>\n\t// \t\t\t</div>\n\t// \t\t\t<div className='ui red segment'>\n\t// \t\t\t\t<p>Name:{this.state.Name}</p>\n\t// \t\t\t</div>\n\t// \t\t\t<div className='ui blue segment'>\n\t// \t\t\t\t{\" \"}\n\t// \t\t\t\t<p>Age(in yrs):{this.state.Age}</p>\n\t// \t\t\t</div>\n\t// \t\t\t<div className='ui green segment'>\n\t// \t\t\t\t{\" \"}\n\t// \t\t\t\t<p>Weight(in KG):{this.state.Weight}</p>\n\t// \t\t\t</div>\n\t// \t\t\t<div className='ui yellow segment'>\n\t// \t\t\t\t<p> Height(in cm):{this.state.Height}</p>\n\t// \t\t\t</div>\n\t// \t\t\t<div className='ui yellow segment'>\n\t// \t\t\t\t<p> Waist(in cm): {this.state.waist}</p>\n\t// \t\t\t</div>\n\t// \t\t\t<div className='ui yellow segment'>\n\t// \t\t\t\t<p>Hip(in cm):{this.state.hip}</p>\n\t// \t\t\t</div>\n\t// \t\t\t<div className='ui yellow segment'>\n\t// \t\t\t\t<p>gender: {this.state.Sex}</p>\n\t// \t\t\t</div>\n\t// \t\t\t<div className='ui blue segment'>\n\t// \t\t\t\t<p>BMI: {this.state.bmi}</p>\n\t// \t\t\t</div>\n\t// \t\t\t<div className='ui blue segment'>\n\t// \t\t\t\t<p>According to BMI: {this.state.typeOfPerson}</p>\n\t// \t\t\t</div>\n\t// \t\t\t<div className='ui blue segment'>\n\t// \t\t\t\t<p>\n\t// \t\t\t\t\tDisease Risk (like type 2 diabetes,hypertension,CVD):{\" \"}\n\t// \t\t\t\t\t{this.state.diseaseRisk}\n\t// \t\t\t\t</p>\n\t// \t\t\t</div>\n\t// \t\t\t{this.getUserDetails()}\n\t// \t\t</div>\n\t// \t);\n\t// }\n\t// helpplease = () => {\n\t// \tif (document.getElementById(\"inputvalueforfooddetails\").value != null) {\n\t// \t\tthis.setState({\n\t// \t\t\tinputvalueforfooddetails: document.getElementById(\n\t// \t\t\t\t\"inputvalueforfooddetails\"\n\t// \t\t\t).value\n\t// \t\t});\n\t// \t}\n\t// };\n\t// renderHelper() {\n\t// \treturn (\n\t// \t\t<div>\n\t// \t\t\t<label>Food Details</label>\n\t// \t\t\t<input type='text' id='inputvalueforfooddetails'></input>\n\t// \t\t\t<button onClick={this.helpplease}>submit</button>\n\t// \t\t</div>\n\t// \t);\n\t// }\n\trender() {\n\t\tif (!this.props.plan) {\n\t\t\treturn <div>Loading</div>;\n\t\t}\n\t\treturn (\t\t\t\n\t\t\t<div>\n\t\t\t<UserDetails data={this.props.plan}/>\n\t\t\t</div>\n\t\t);\n\t}\n}\nconst mapStateToProps = (state, ownProps) => {\n\treturn {\n\t\tplan: state.plans[ownProps.match.params.id]\n\t};\n};\nexport default connect(\n\tmapStateToProps,\n\t{ fetchplan }\n)(PlanShow);\n"]},"metadata":{},"sourceType":"module"}