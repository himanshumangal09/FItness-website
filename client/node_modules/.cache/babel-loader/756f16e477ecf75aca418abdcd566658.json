{"ast":null,"code":"var _jsxFileName = \"/home/himanshu/Desktop/24hack.it/healthcare/src/components/GoogleAuth.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { signIn, signOut } from '../actions';\n\nclass GoogleAuth extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onAuthChange = isSignedIn => {\n      if (isSignedIn) {\n        this.props.signIn(this.auth.currentUser.get().getId());\n      } else {\n        this.props.signOut();\n      }\n    };\n\n    this.onSignInClick = () => {\n      this.auth.signIn();\n    };\n\n    this.onSignOutClick = () => {\n      this.auth.signOut();\n    };\n  }\n\n  // state = { isSignedIn : null };\n  componentDidMount() {\n    window.gapi.load('client:auth2', () => {\n      window.gapi.client.init({\n        clientId: '723986274556-2n7gsdvehqitnbguvp0je91ktgbgp9bv.apps.googleusercontent.com',\n        scope: 'email'\n      }).then(() => {\n        this.auth = window.gapi.auth2.getAuthInstance(); //   this.setState({isSignedIn:this.auth.isSignedIn.get() })\n\n        this.onAuthChange(this.auth.isSignedIn.get());\n        this.auth.isSignedIn.listen(this.onAuthChange);\n      });\n    });\n  }\n\n  renderAuthButton() {\n    if (this.props.isSignedIn == null) {\n      return null;\n    } else if (this.props.isSignedIn) {\n      return React.createElement(\"button\", {\n        onClick: this.onSignOutClick,\n        className: \"ui red google button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"google icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }), \"Sign Out\");\n    } else {\n      return React.createElement(\"button\", {\n        onClick: this.onSignInClick,\n        className: \"ui red google button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"google icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }), \"Sign In\");\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, this.renderAuthButton());\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    isSignedIn: state.auth.isSignedIn\n  };\n};\n\nexport default connect(mapStateToProps, {\n  signIn,\n  signOut\n})(GoogleAuth);","map":{"version":3,"sources":["/home/himanshu/Desktop/24hack.it/healthcare/src/components/GoogleAuth.js"],"names":["React","connect","signIn","signOut","GoogleAuth","Component","onAuthChange","isSignedIn","props","auth","currentUser","get","getId","onSignInClick","onSignOutClick","componentDidMount","window","gapi","load","client","init","clientId","scope","then","auth2","getAuthInstance","listen","renderAuthButton","render","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,MAAR,EAAiBC,OAAjB,QAA+B,YAA/B;;AACA,MAAMC,UAAN,SAAyBJ,KAAK,CAACK,SAA/B,CAAyC;AAAA;AAAA;;AAAA,SAerCC,YAfqC,GAevBC,UAAD,IAAgB;AACzB,UAAGA,UAAH,EACI;AACI,aAAKC,KAAL,CAAWN,MAAX,CAAkB,KAAKO,IAAL,CAAUC,WAAV,CAAsBC,GAAtB,GAA4BC,KAA5B,EAAlB;AACH,OAHL,MAIS;AACD,aAAKJ,KAAL,CAAWL,OAAX;AACH;AACR,KAvBoC;;AAAA,SAwBrCU,aAxBqC,GAwBrB,MAAM;AAClB,WAAKJ,IAAL,CAAUP,MAAV;AACH,KA1BoC;;AAAA,SA2BrCY,cA3BqC,GA2BpB,MAAM;AACnB,WAAKL,IAAL,CAAUN,OAAV;AACP,KA7BwC;AAAA;;AACtC;AACCY,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,MAAM,CAACC,IAAP,CAAYC,IAAZ,CAAiB,cAAjB,EAAgC,MAAM;AAClCF,MAAAA,MAAM,CAACC,IAAP,CAAYE,MAAZ,CAAmBC,IAAnB,CAAwB;AACpBC,QAAAA,QAAQ,EAAC,0EADW;AAEpBC,QAAAA,KAAK,EAAC;AAFc,OAAxB,EAGGC,IAHH,CAGQ,MAAI;AACR,aAAKd,IAAL,GAAUO,MAAM,CAACC,IAAP,CAAYO,KAAZ,CAAkBC,eAAlB,EAAV,CADQ,CAEP;;AACA,aAAKnB,YAAL,CAAkB,KAAKG,IAAL,CAAUF,UAAV,CAAqBI,GAArB,EAAlB;AACA,aAAKF,IAAL,CAAUF,UAAV,CAAqBmB,MAArB,CAA4B,KAAKpB,YAAjC;AACA,OARL;AASC,KAVL;AAWH;;AAgBDqB,EAAAA,gBAAgB,GAAG;AACf,QAAI,KAAKnB,KAAL,CAAWD,UAAX,IAAuB,IAA3B,EAAiC;AAC9B,aAAO,IAAP;AACF,KAFD,MAGK,IAAG,KAAKC,KAAL,CAAWD,UAAd,EAA0B;AAC3B,aACG;AAAQ,QAAA,OAAO,EAAE,KAAKO,cAAtB;AAAsC,QAAA,SAAS,EAAC,sBAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAG,QAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,aADH;AAMH,KAPI,MAQA;AACL,aACI;AAAQ,QAAA,OAAO,EAAE,KAAKD,aAAtB;AAAqC,QAAA,SAAS,EAAC,sBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAG,QAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,YADJ;AAMH;AACJ;;AACGe,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,KAAKD,gBAAL,EAAN,CADJ;AAGH;;AAvDoC;;AAyDzC,MAAME,eAAe,GAAIC,KAAD,IAAW;AACnC,SAAO;AAACvB,IAAAA,UAAU,EAACuB,KAAK,CAACrB,IAAN,CAAWF;AAAvB,GAAP;AACC,CAFD;;AAGA,eAAeN,OAAO,CAAC4B,eAAD,EAAkB;AAAC3B,EAAAA,MAAD;AAAUC,EAAAA;AAAV,CAAlB,CAAP,CAA6CC,UAA7C,CAAf","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux' ;\nimport {signIn , signOut} from '../actions';\nclass GoogleAuth extends React.Component {\n   // state = { isSignedIn : null };\n    componentDidMount() {\n        window.gapi.load('client:auth2',() => {\n            window.gapi.client.init({\n                clientId:'723986274556-2n7gsdvehqitnbguvp0je91ktgbgp9bv.apps.googleusercontent.com',\n                scope:'email'\n            }).then(()=>{\n                this.auth=window.gapi.auth2.getAuthInstance();\n                 //   this.setState({isSignedIn:this.auth.isSignedIn.get() })\n                 this.onAuthChange(this.auth.isSignedIn.get() );  \n                 this.auth.isSignedIn.listen(this.onAuthChange)\n                });\n            });\n    }   \n    onAuthChange=(isSignedIn) => {\n        if(isSignedIn)\n            {\n                this.props.signIn(this.auth.currentUser.get().getId());\n            }\n            else {\n                this.props.signOut();\n            }\n    };\n    onSignInClick = () => {\n        this.auth.signIn();\n    };\n    onSignOutClick = () => {\n        this.auth.signOut();\n};\n    renderAuthButton() {\n        if (this.props.isSignedIn==null) {\n           return null ;\n        }\n        else if(this.props.isSignedIn) {\n            return (\n               <button onClick={this.onSignOutClick} className=\"ui red google button\">\n                   <i className=\"google icon\" />\n                   Sign Out\n               </button>\n            );\n        }\n        else {\n        return (\n            <button onClick={this.onSignInClick} className=\"ui red google button\">\n                <i className=\"google icon\" />\n                Sign In\n            </button>\n        );       \n    }\n}\n    render() {\n        return (\n            <div>{this.renderAuthButton()}</div>\n        );\n    }\n}\nconst mapStateToProps = (state) => {\nreturn {isSignedIn:state.auth.isSignedIn};\n};\nexport default connect(mapStateToProps ,{signIn , signOut})(GoogleAuth);"]},"metadata":{},"sourceType":"module"}