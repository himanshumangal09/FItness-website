{"ast":null,"code":"var _jsxFileName = \"/home/himanshu/Desktop/24hack.it/healthcare/src/components/plans/PlanCreate.js\";\nimport React from 'react';\nimport { Field, reduxForm } from 'redux-form';\n\nclass PlanCreate extends React.Component {\n  renderInput({\n    input,\n    label,\n    meta\n  }) {\n    return React.createElement(\"div\", {\n      className: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 6\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 7\n      },\n      __self: this\n    }, label), React.createElement(\"input\", Object.assign({}, input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8\n      },\n      __self: this\n    })));\n  } // renderPlan(formProps) {\n  //     console.log(formProps)\n  //     return(\n  //     <div>\n  //         <form>\n  //             <input type=\"radio\" name=\"plan\" value=\"basic\" checked/> basic<br/>\n  //             <input type=\"radio\" name=\"plan\" value=\"intermediate\"/> intermediate<br/>\n  //             <input type=\"radio\" name=\"plan\" value=\"advance\"/> advance  \n  //         </form> \n  //     </div>);\n  // }\n  // renderSex(formProps) {\n  //     console.log(formProps)\n  //     return(\n  //     <div>\n  //         <form>\n  //             <input type=\"radio\" name=\"gender\" value=\"male\" checked/> Male<br/>\n  //             <input type=\"radio\" name=\"gender\" value=\"female\"/> Female<br/>\n  //             <input type=\"radio\" name=\"gender\" value=\"other\"/> Other  \n  //         </form> \n  //     </div>);\n  // }\n\n\n  onSubmit(formValues) {\n    console.log(formValues);\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      onSubmit: this.props.handleSubmit(this.onSubmit),\n      className: \"ui form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(Field, {\n      name: \"Age\",\n      component: this.renderInput,\n      label: \"Enter Age\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }), React.createElement(Field, {\n      name: \"Weight\",\n      component: this.renderInput,\n      label: \"Enter Weight\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }), React.createElement(Field, {\n      name: \"Sex\",\n      component: this.renderInput,\n      label: \"Enter Sex\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }), React.createElement(Field, {\n      name: \"Height\",\n      component: this.renderInput,\n      label: \"Enter Height\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }), React.createElement(Field, {\n      name: \"Plan\",\n      component: this.renderInput,\n      label: \"Enter Plan  Ex.  (Basic,Intermediate,Advance) \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"ui button primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"Submit\"));\n  }\n\n}\n\nconst validate = formValues => {\n  const errors = {};\n\n  if (!formValues.Age & formValues.Age == NaN) {\n    error.Age = 'You must enter the Age in Numbers';\n  }\n\n  if (!formValues.Weight & formValues.Weight == NaN) {\n    error.Weight = 'You must enter the weight in Numbers';\n  }\n\n  if (!formValues.Height & formValues.Height == NaN) {\n    error.Height = 'You must enter the Height';\n  }\n\n  if (!formValues.Sex) {\n    error.Sex = 'You must enter the Sex';\n  }\n\n  if (!formValues.Plan & formValues.Plan == 'Basic' || formValues.Plan == 'Interme') {\n    error.Plan = 'You must enter the Plan';\n  }\n\n  return errors;\n};\n\nexport default reduxForm({\n  form: 'PLANCREATE',\n  validate\n})(PlanCreate);","map":{"version":3,"sources":["/home/himanshu/Desktop/24hack.it/healthcare/src/components/plans/PlanCreate.js"],"names":["React","Field","reduxForm","PlanCreate","Component","renderInput","input","label","meta","onSubmit","formValues","console","log","render","props","handleSubmit","validate","errors","Age","NaN","error","Weight","Height","Sex","Plan","form"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Field,reduxForm} from 'redux-form';\nclass PlanCreate extends React.Component{\n    renderInput({input,label,meta}){\n        return(\n        <div className=\"field\">\n            <label>{label}</label>\n            <input {...input}/>\n        </div>);\n    }\n    // renderPlan(formProps) {\n    //     console.log(formProps)\n    //     return(\n    //     <div>\n    //         <form>\n    //             <input type=\"radio\" name=\"plan\" value=\"basic\" checked/> basic<br/>\n    //             <input type=\"radio\" name=\"plan\" value=\"intermediate\"/> intermediate<br/>\n    //             <input type=\"radio\" name=\"plan\" value=\"advance\"/> advance  \n    //         </form> \n    //     </div>);\n    // }\n    // renderSex(formProps) {\n    //     console.log(formProps)\n    //     return(\n    //     <div>\n    //         <form>\n    //             <input type=\"radio\" name=\"gender\" value=\"male\" checked/> Male<br/>\n    //             <input type=\"radio\" name=\"gender\" value=\"female\"/> Female<br/>\n    //             <input type=\"radio\" name=\"gender\" value=\"other\"/> Other  \n    //         </form> \n    //     </div>);\n    // }\n    onSubmit(formValues) {\n        console.log(formValues)\n    }\n    render()\n        {\n        return (<form onSubmit={this.props.handleSubmit(this.onSubmit)} className=\"ui form\">\n            <Field name=\"Age\" component={this.renderInput} label=\"Enter Age\"/>\n            <Field name=\"Weight\"  component={this.renderInput} label=\"Enter Weight\"/>\n            <Field name=\"Sex\"  component={this.renderInput} label=\"Enter Sex\"/>\n            <Field name=\"Height\"  component={this.renderInput} label=\"Enter Height\"/>\n            <Field name=\"Plan\"  component={this.renderInput} label=\"Enter Plan  Ex.  (Basic,Intermediate,Advance) \"/>\n            <button className=\"ui button primary\">Submit</button>\n        </form>);\n        }\n}\nconst validate = (formValues)=>{\n    const errors={};\n    if(!formValues.Age&formValues.Age==NaN)\n    {\n        error.Age='You must enter the Age in Numbers';\n        \n    }    if(!formValues.Weight&formValues.Weight==NaN)\n    {\n        error.Weight='You must enter the weight in Numbers';\n        \n    }\n    if(!formValues.Height&formValues.Height==NaN)\n    {\n        error.Height='You must enter the Height';\n        \n    }    if(!formValues.Sex)\n    {\n        error.Sex='You must enter the Sex';\n        \n    }    if(!formValues.Plan&formValues.Plan=='Basic'||formValues.Plan=='Interme')\n    {\n        error.Plan='You must enter the Plan';\n        \n    }\n    return errors;\n\n};\nexport default reduxForm({\n    form:'PLANCREATE',\n    validate\n})(PlanCreate);"]},"metadata":{},"sourceType":"module"}