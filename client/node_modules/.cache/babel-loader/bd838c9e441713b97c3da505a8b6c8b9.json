{"ast":null,"code":"var _jsxFileName = \"/home/himanshu/Desktop/24hack.it/healthcare/client/src/components/plans/PlanCreate.js\";\nimport React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport { connect } from 'react-redux';\nimport { createPlan } from '../../actions';\n\nclass PlanCreate extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.renderInput = ({\n      input,\n      label,\n      meta\n    }) => {\n      console.log(meta);\n      const className = \"field \".concat(meta.error && meta.touched ? 'error' : '');\n      return React.createElement(\"div\", {\n        className: className,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, label), React.createElement(\"input\", Object.assign({}, input, {\n        autoComplete: \"off\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      })), this.renderError(meta));\n    };\n  }\n\n  renderError({\n    error,\n    touched\n  }) {\n    if (touched && error) {\n      return React.createElement(\"div\", {\n        className: \"ui error message\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11\n        },\n        __self: this\n      }, error));\n    }\n  }\n\n  // renderPlan(formProps) {\n  //     console.log(formProps)\n  //     return(\n  //     <div>\n  //         <form>\n  //             <input type=\"radio\" name=\"plan\" value=\"basic\" checked/> basic<br/>\n  //             <input type=\"radio\" name=\"plan\" value=\"intermediate\"/> intermediate<br/>\n  //             <input type=\"radio\" name=\"plan\" value=\"advance\"/> advance  \n  //         </form> \n  //     </div>);\n  // }\n  // renderSex(formProps) {\n  //     console.log(formProps)\n  //     return(\n  //     <div>\n  //         <form>\n  //             <input type=\"radio\" name=\"gender\" value=\"male\" checked/> Male<br/>\n  //             <input type=\"radio\" name=\"gender\" value=\"female\"/> Female<br/>\n  //             <input type=\"radio\" name=\"gender\" value=\"other\"/> Other  \n  //         </form> \n  //     </div>);\n  // }\n  onSubmit(formValues) {\n    console.log(formValues);\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      onSubmit: this.props.handleSubmit(this.onSubmit),\n      className: \"ui form error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(Field, {\n      name: \"Age\",\n      component: this.renderInput,\n      label: \"Enter Age\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), React.createElement(Field, {\n      name: \"Weight\",\n      component: this.renderInput,\n      label: \"Enter Weight\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(Field, {\n      name: \"Sex\",\n      component: this.renderInput,\n      label: \"Enter Sex\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(Field, {\n      name: \"Height\",\n      component: this.renderInput,\n      label: \"Enter Height\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(Field, {\n      name: \"Name\",\n      component: this.renderInput,\n      label: \"Enter Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), React.createElement(Field, {\n      name: \"Plan\",\n      component: this.renderInput,\n      label: \"Enter Plan  Ex.  (Basic,Intermediate,Advance) \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"ui button primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Submit\"));\n  }\n\n}\n\nconst validate = formValues => {\n  const error = {};\n\n  if (!formValues.Age) {\n    error.Age = 'You must enter the Age';\n  }\n\n  if (!formValues.Weight) {\n    error.Weight = 'You must enter the weight';\n  }\n\n  if (!formValues.Height) {\n    error.Height = 'You must enter the Height';\n  }\n\n  if (!formValues.Sex) {\n    error.Sex = 'You must enter the Sex';\n  }\n\n  if (!formValues.Plan) {\n    error.Plan = 'You must enter the Plan';\n  }\n\n  if (!formValues.Name) {\n    error.Name = 'You must enter the Name';\n  }\n\n  return error;\n};\n\nexport default reduxForm({\n  form: 'PLANCREATE',\n  validate\n})(PlanCreate);","map":{"version":3,"sources":["/home/himanshu/Desktop/24hack.it/healthcare/client/src/components/plans/PlanCreate.js"],"names":["React","Field","reduxForm","connect","createPlan","PlanCreate","Component","renderInput","input","label","meta","console","log","className","error","touched","renderError","onSubmit","formValues","render","props","handleSubmit","validate","Age","Weight","Height","Sex","Plan","Name","form"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Field,reduxForm} from 'redux-form';\nimport {connect } from 'react-redux';\nimport {createPlan} from '../../actions'\nclass PlanCreate extends React.Component{\n    renderError({error,touched}) {\n        if(touched&&error)\n            {\n                return(\n                    <div className=\"ui error message\">\n                        <div className=\"header\">\n                            {error}\n                        </div>\n                    </div>\n                );\n            }\n    }\n    renderInput = ({input,label,meta})=>{\n       console.log(meta)\n       const className=`field ${meta.error&&meta.touched ? 'error' : ''}`\n        return(\n        <div className={className}>\n            <label>{label}</label>\n            <input {...input} autoComplete=\"off\"/>\n            {this.renderError(meta)}\n        </div>);\n    }\n    // renderPlan(formProps) {\n    //     console.log(formProps)\n    //     return(\n    //     <div>\n    //         <form>\n    //             <input type=\"radio\" name=\"plan\" value=\"basic\" checked/> basic<br/>\n    //             <input type=\"radio\" name=\"plan\" value=\"intermediate\"/> intermediate<br/>\n    //             <input type=\"radio\" name=\"plan\" value=\"advance\"/> advance  \n    //         </form> \n    //     </div>);\n    // }\n    // renderSex(formProps) {\n    //     console.log(formProps)\n    //     return(\n    //     <div>\n    //         <form>\n    //             <input type=\"radio\" name=\"gender\" value=\"male\" checked/> Male<br/>\n    //             <input type=\"radio\" name=\"gender\" value=\"female\"/> Female<br/>\n    //             <input type=\"radio\" name=\"gender\" value=\"other\"/> Other  \n    //         </form> \n    //     </div>);\n    // }\n    onSubmit(formValues) {\n        \n        console.log(formValues)\n    }\n    render()\n        {\n        return (<form onSubmit={this.props.handleSubmit(this.onSubmit)} className=\"ui form error\">\n            <Field name=\"Age\" component={this.renderInput} label=\"Enter Age\"/>\n            <Field name=\"Weight\"  component={this.renderInput} label=\"Enter Weight\"/>\n            <Field name=\"Sex\"  component={this.renderInput} label=\"Enter Sex\"/>\n            <Field name=\"Height\"  component={this.renderInput} label=\"Enter Height\"/>\n            <Field name=\"Name\"  component={this.renderInput} label=\"Enter Name\"/>\n            <Field name=\"Plan\"  component={this.renderInput} label=\"Enter Plan  Ex.  (Basic,Intermediate,Advance) \"/>\n            <button className=\"ui button primary\">Submit</button>\n        </form>);\n        }\n}\nconst validate = (formValues)=>{\n    const error={};\n    if(!formValues.Age)\n    {\n        error.Age='You must enter the Age';\n        \n    }    if(!formValues.Weight)\n    {\n        error.Weight='You must enter the weight';\n        \n    }\n    if(!formValues.Height)\n    {\n        error.Height='You must enter the Height';\n        \n    }    if(!formValues.Sex)\n    {\n        error.Sex='You must enter the Sex';\n        \n    }    if(!formValues.Plan)\n    {\n        error.Plan='You must enter the Plan';\n        \n    }\n    if(!formValues.Name)\n    {\n        error.Name='You must enter the Name';\n        \n    }\n    return error;\n\n};\nexport default reduxForm({\n    form:'PLANCREATE',\n    validate\n})(PlanCreate);"]},"metadata":{},"sourceType":"module"}