{"ast":null,"code":"var _jsxFileName = \"/home/himanshu/Desktop/24hack.it/healthcare/client/src/components/plans/PlanList.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchplans } from '../../actions/index';\n\nclass PlanList extends React.Component {\n  componentDidMount() {\n    this.props.fetchplans();\n  }\n\n  renderAdmin(plan) {\n    if (plan.userId === this.props.currentUserId) {\n      return React.createElement(\"div\", {\n        className: \"right floated content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \" ui button primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12\n        },\n        __self: this\n      }, \"Edit\"), React.createElement(\"button\", {\n        className: \" ui button ne\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }, \"Edit\"));\n    }\n  }\n\n  renderList() {\n    return this.props.plans.map(plan => {\n      return React.createElement(\"div\", {\n        className: \"item\",\n        key: plan.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"large middle aligned icon user circle outline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, plan.Name, React.createElement(\"div\", {\n        className: \"description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, plan.Plan)), this.renderAdmin(plan));\n    });\n  }\n\n  render() {\n    console.log(this.props.plans);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"Plans\"), React.createElement(\"div\", {\n      className: \"ui celled list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, this.renderList()));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    plans: Object.values(state.plans),\n    currentUserId: state.auth.userId\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchplans\n})(PlanList);","map":{"version":3,"sources":["/home/himanshu/Desktop/24hack.it/healthcare/client/src/components/plans/PlanList.js"],"names":["React","connect","fetchplans","PlanList","Component","componentDidMount","props","renderAdmin","plan","userId","currentUserId","renderList","plans","map","id","Name","Plan","render","console","log","mapStateToProps","state","Object","values","auth"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,UAAR,QAAyB,qBAAzB;;AACA,MAAMC,QAAN,SAAuBH,KAAK,CAACI,SAA7B,CAAsC;AACnCC,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,KAAL,CAAWJ,UAAX;AACH;;AACDK,EAAAA,WAAW,CAACC,IAAD,EAAO;AACd,QAAGA,IAAI,CAACC,MAAL,KAAc,KAAKH,KAAL,CAAWI,aAA5B,EACA;AACI,aAAO;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACP;AAAQ,QAAA,SAAS,EAAC,oBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADO,EAEN;AAAQ,QAAA,SAAS,EAAC,eAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFM,CAAP;AAIH;AACJ;;AACDC,EAAAA,UAAU,GAAE;AACR,WAAO,KAAKL,KAAL,CAAWM,KAAX,CAAiBC,GAAjB,CAAqBL,IAAI,IAAE;AAC/B,aAAQ;AAAK,QAAA,SAAS,EAAC,MAAf;AAAsB,QAAA,GAAG,EAAEA,IAAI,CAACM,EAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACH;AAAG,QAAA,SAAS,EAAC,+CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADG,EAEH;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACUN,IAAI,CAACO,IADf,EAEI;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKP,IAAI,CAACQ,IADV,CAFJ,CAFG,EAQF,KAAKT,WAAL,CAAiBC,IAAjB,CARE,CAAR;AAWF,KAZM,CAAP;AAaH;;AACAS,EAAAA,MAAM,GAAG;AACLC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKb,KAAL,CAAWM,KAAvB;AACJ,WACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,EAEI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKD,UAAL,EADL,CAFJ,CADA;AAOH;;AArCqC;;AAuCtC,MAAMS,eAAe,GAAIC,KAAD,IAAU;AAClC,SAAO;AAACT,IAAAA,KAAK,EAACU,MAAM,CAACC,MAAP,CAAcF,KAAK,CAACT,KAApB,CAAP;AACPF,IAAAA,aAAa,EAACW,KAAK,CAACG,IAAN,CAAWf;AADlB,GAAP;AAEC,CAHD;;AAIA,eAAeR,OAAO,CAACmB,eAAD,EAAiB;AAAClB,EAAAA;AAAD,CAAjB,CAAP,CAAsCC,QAAtC,CAAf","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux';\nimport {fetchplans} from '../../actions/index'\nclass PlanList extends React.Component{\n   componentDidMount() {\n       this.props.fetchplans();\n   }\n   renderAdmin(plan) {\n       if(plan.userId===this.props.currentUserId)\n       {\n           return(<div className=\"right floated content\">\n           <button className=\" ui button primary\">Edit</button>\n            <button className=\" ui button ne\">Edit</button>\n           </div>);\n       }\n   }\n   renderList(){\n       return this.props.plans.map(plan=>{\n          return( <div className=\"item\" key={plan.id} >\n               <i className=\"large middle aligned icon user circle outline\"/>\n               <div className=\"content\">\n                        {plan.Name}\n                   <div className=\"description\">\n                       {plan.Plan}\n                    </div>\n               </div>\n               {this.renderAdmin(plan)}\n           </div>\n           );\n       })\n   }\n    render() {\n        console.log(this.props.plans)\n    return (\n    <div>\n        <h2>Plans</h2>\n        <div className=\"ui celled list\">\n            {this.renderList()}\n        </div>\n    </div>);\n}\n}\nconst mapStateToProps = (state) =>{\nreturn {plans:Object.values(state.plans),\ncurrentUserId:state.auth.userId}\n}\nexport default connect(mapStateToProps,{fetchplans})(PlanList);"]},"metadata":{},"sourceType":"module"}