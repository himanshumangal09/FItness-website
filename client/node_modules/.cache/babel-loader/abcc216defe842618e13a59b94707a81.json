{"ast":null,"code":"// import stream from '../api/stream';\n// import history from '../history';\nIMPO;\nexport const signIn = () => {\n  return {\n    type: 'SIGN_IN' //payload:userId\n\n  };\n};\nexport const signOut = () => {\n  return {\n    type: 'SIGN_OUT'\n  };\n}; // export const createStream  = formValues => async (dispatch,getState) =>{\n//     const {userId} =  getState().auth;\n//     const response = await stream.post('/streams/new',{...formValues,userId});\n//         dispatch({\n//             type:'CREATE_STREAM',\n//             payload:response.data\n//     });\n//     history.push('/');\n// };   \n// export const fetchStream = (id) => async dispatch => {\n//     const response = await stream.get(`/streams/${id}`);\n//     dispatch({\n//         type:'FETCH_STREAM',\n//         payload:response.data\n//     });\n// };\n// export const fetchStreams = () => async dispatch => {\n//     const response = await stream.get('/streams');\n//     dispatch({\n//         type:'FETCH_STREAMS',\n//         payload:response.data\n//     });\n//     history.push('/');\n// };\n// export const editStream = (id,formValues) => async dispatch =>{\n//     const response = await stream.patch(`/streams/${id}`,formValues);\n//     dispatch({\n//         type:'EDIT_STREAM',\n//         payload:response.data\n//     });\n//     history.push('/');\n// };\n// export const deleteStream = (id) => async dispatch => {\n//     await stream.delete(`/streams/${id}`);\n// dispatch({\n//     type:'DELETE_STREAM',\n//     payload:id});\n//     history.push('/');\n// };","map":{"version":3,"sources":["/home/himanshu/Desktop/24hack.it/healthcare/src/actions/index.js"],"names":["IMPO","signIn","type","signOut"],"mappings":"AAAA;AACA;AACAA,IAAI;AACJ,OAAO,MAAMC,MAAM,GAAG,MAAM;AACxB,SAAO;AACHC,IAAAA,IAAI,EAAC,SADF,CAEH;;AAFG,GAAP;AAIH,CALM;AAMP,OAAO,MAAMC,OAAO,GAAG,MAAM;AACzB,SAAO;AACHD,IAAAA,IAAI,EAAC;AADF,GAAP;AAGF,CAJK,C,CAKP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["// import stream from '../api/stream';\n// import history from '../history';\nIMPO\nexport const signIn = () => {\n    return {\n        type:'SIGN_IN',\n        //payload:userId\n    };\n};\nexport const signOut = () => {\n    return {\n        type:'SIGN_OUT'\n    };\n }; \n// export const createStream  = formValues => async (dispatch,getState) =>{\n//     const {userId} =  getState().auth;\n//     const response = await stream.post('/streams/new',{...formValues,userId});\n//         dispatch({\n//             type:'CREATE_STREAM',\n//             payload:response.data\n//     });\n//     history.push('/');\n// };   \n// export const fetchStream = (id) => async dispatch => {\n//     const response = await stream.get(`/streams/${id}`);\n//     dispatch({\n//         type:'FETCH_STREAM',\n//         payload:response.data\n//     });\n// };\n// export const fetchStreams = () => async dispatch => {\n//     const response = await stream.get('/streams');\n//     dispatch({\n//         type:'FETCH_STREAMS',\n//         payload:response.data\n//     });\n//     history.push('/');\n// };\n// export const editStream = (id,formValues) => async dispatch =>{\n//     const response = await stream.patch(`/streams/${id}`,formValues);\n//     dispatch({\n//         type:'EDIT_STREAM',\n//         payload:response.data\n//     });\n//     history.push('/');\n// };\n// export const deleteStream = (id) => async dispatch => {\n//     await stream.delete(`/streams/${id}`);\n// dispatch({\n//     type:'DELETE_STREAM',\n//     payload:id});\n//     history.push('/');\n// };"]},"metadata":{},"sourceType":"module"}