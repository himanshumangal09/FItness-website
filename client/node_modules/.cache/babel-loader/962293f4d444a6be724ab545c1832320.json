{"ast":null,"code":"// import stream from '../api/stream';\n// import history from '../history';\nimpot;\nimport { SIGN_IN, SIGN_OUT } from './types';\nexport const signIn = userId => {\n  return {\n    type: SIGN_IN,\n    payload: userId\n  };\n};\nexport const signOut = () => {\n  return {\n    type: SIGN_OUT\n  };\n}; // export const createStream  = formValues => async (dispatch,getState) =>{\n//     const {userId} =  getState().auth;\n//     const response = await stream.post('/streams/new',{...formValues,userId});\n//         dispatch({\n//             type:'CREATE_STREAM',\n//             payload:response.data\n//     });\n//     history.push('/');\n// };   \n// export const fetchStream = (id) => async dispatch => {\n//     const response = await stream.get(`/streams/${id}`);\n//     dispatch({\n//         type:'FETCH_STREAM',\n//         payload:response.data\n//     });\n// };\n// export const fetchStreams = () => async dispatch => {\n//     const response = await stream.get('/streams');\n//     dispatch({\n//         type:'FETCH_STREAMS',\n//         payload:response.data\n//     });\n//     history.push('/');\n// };\n// export const editStream = (id,formValues) => async dispatch =>{\n//     const response = await stream.patch(`/streams/${id}`,formValues);\n//     dispatch({\n//         type:'EDIT_STREAM',\n//         payload:response.data\n//     });\n//     history.push('/');\n// };\n// export const deleteStream = (id) => async dispatch => {\n//     await stream.delete(`/streams/${id}`);\n// dispatch({\n//     type:'DELETE_STREAM',\n//     payload:id});\n//     history.push('/');\n// };","map":{"version":3,"sources":["/home/himanshu/Desktop/24hack.it/healthcare/client/src/actions/index.js"],"names":["impot","SIGN_IN","SIGN_OUT","signIn","userId","type","payload","signOut"],"mappings":"AAAA;AACA;AACAA,KAAK;AACL,SAAQC,OAAR,EAAgBC,QAAhB,QAA+B,SAA/B;AACA,OAAO,MAAMC,MAAM,GAAIC,MAAD,IAAY;AAC9B,SAAO;AACHC,IAAAA,IAAI,EAACJ,OADF;AAEHK,IAAAA,OAAO,EAACF;AAFL,GAAP;AAIH,CALM;AAMP,OAAO,MAAMG,OAAO,GAAG,MAAM;AACzB,SAAO;AACHF,IAAAA,IAAI,EAACH;AADF,GAAP;AAGF,CAJK,C,CAKP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["// import stream from '../api/stream';\n// import history from '../history';\nimpot\nimport {SIGN_IN,SIGN_OUT} from './types';\nexport const signIn = (userId) => {\n    return {\n        type:SIGN_IN,\n        payload:userId\n    };\n};\nexport const signOut = () => {\n    return {\n        type:SIGN_OUT\n    };\n }; \n// export const createStream  = formValues => async (dispatch,getState) =>{\n//     const {userId} =  getState().auth;\n//     const response = await stream.post('/streams/new',{...formValues,userId});\n//         dispatch({\n//             type:'CREATE_STREAM',\n//             payload:response.data\n//     });\n//     history.push('/');\n// };   \n// export const fetchStream = (id) => async dispatch => {\n//     const response = await stream.get(`/streams/${id}`);\n//     dispatch({\n//         type:'FETCH_STREAM',\n//         payload:response.data\n//     });\n// };\n// export const fetchStreams = () => async dispatch => {\n//     const response = await stream.get('/streams');\n//     dispatch({\n//         type:'FETCH_STREAMS',\n//         payload:response.data\n//     });\n//     history.push('/');\n// };\n// export const editStream = (id,formValues) => async dispatch =>{\n//     const response = await stream.patch(`/streams/${id}`,formValues);\n//     dispatch({\n//         type:'EDIT_STREAM',\n//         payload:response.data\n//     });\n//     history.push('/');\n// };\n// export const deleteStream = (id) => async dispatch => {\n//     await stream.delete(`/streams/${id}`);\n// dispatch({\n//     type:'DELETE_STREAM',\n//     payload:id});\n//     history.push('/');\n// };"]},"metadata":{},"sourceType":"module"}