{"ast":null,"code":"import _defineProperty from \"/home/himanshu/Desktop/24hack.it/healthcare/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport plans from '../apis/plans'; // import history from '../history';\n\nimport { SIGN_IN, SIGN_OUT } from './types';\nexport const signIn = userId => {\n  return {\n    type: SIGN_IN,\n    payload: userId\n  };\n};\nexport const signOut = () => {\n  return {\n    type: SIGN_OUT\n  };\n};\nexport const createPlan = formValues => async (dispatch, getState) => {\n  const userId = getState().auth.userId;\n  const response = await s.post('/streams/new', _objectSpread({}, formValues, {\n    userId\n  }));\n  dispatch({\n    type: 'CREATE_STREAM',\n    payload: response.data\n  });\n  history.push('/');\n}; // export const fetchStream = (id) => async dispatch => {\n//     const response = await stream.get(`/streams/${id}`);\n//     dispatch({\n//         type:'FETCH_STREAM',\n//         payload:response.data\n//     });\n// };\n// export const fetchStreams = () => async dispatch => {\n//     const response = await stream.get('/streams');\n//     dispatch({\n//         type:'FETCH_STREAMS',\n//         payload:response.data\n//     });\n//     history.push('/');\n// };\n// export const editStream = (id,formValues) => async dispatch =>{\n//     const response = await stream.patch(`/streams/${id}`,formValues);\n//     dispatch({\n//         type:'EDIT_STREAM',\n//         payload:response.data\n//     });\n//     history.push('/');\n// };\n// export const deleteStream = (id) => async dispatch => {\n//     await stream.delete(`/streams/${id}`);\n// dispatch({\n//     type:'DELETE_STREAM',\n//     payload:id});\n//     history.push('/');\n// };","map":{"version":3,"sources":["/home/himanshu/Desktop/24hack.it/healthcare/client/src/actions/index.js"],"names":["plans","SIGN_IN","SIGN_OUT","signIn","userId","type","payload","signOut","createPlan","formValues","dispatch","getState","auth","response","s","post","data","history","push"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,eAAlB,C,CACA;;AACA,SAAQC,OAAR,EAAgBC,QAAhB,QAA+B,SAA/B;AACA,OAAO,MAAMC,MAAM,GAAIC,MAAD,IAAY;AAC9B,SAAO;AACHC,IAAAA,IAAI,EAACJ,OADF;AAEHK,IAAAA,OAAO,EAACF;AAFL,GAAP;AAIH,CALM;AAMP,OAAO,MAAMG,OAAO,GAAG,MAAM;AACzB,SAAO;AACHF,IAAAA,IAAI,EAACH;AADF,GAAP;AAGF,CAJK;AAKP,OAAO,MAAMM,UAAU,GAAIC,UAAU,IAAI,OAAOC,QAAP,EAAgBC,QAAhB,KAA4B;AAAA,QAC1DP,MAD0D,GAC/CO,QAAQ,GAAGC,IADoC,CAC1DR,MAD0D;AAEjE,QAAMS,QAAQ,GAAG,MAAMC,CAAC,CAACC,IAAF,CAAO,cAAP,oBAA0BN,UAA1B;AAAqCL,IAAAA;AAArC,KAAvB;AACIM,EAAAA,QAAQ,CAAC;AACLL,IAAAA,IAAI,EAAC,eADA;AAELC,IAAAA,OAAO,EAACO,QAAQ,CAACG;AAFZ,GAAD,CAAR;AAIJC,EAAAA,OAAO,CAACC,IAAR,CAAa,GAAb;AACH,CARM,C,CASP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import plans from '../apis/plans';\n// import history from '../history';\nimport {SIGN_IN,SIGN_OUT} from './types';\nexport const signIn = (userId) => {\n    return {\n        type:SIGN_IN,\n        payload:userId\n    };\n};\nexport const signOut = () => {\n    return {\n        type:SIGN_OUT\n    };\n }; \nexport const createPlan  = formValues => async (dispatch,getState) =>{\n    const {userId} =  getState().auth;\n    const response = await s.post('/streams/new',{...formValues,userId});\n        dispatch({\n            type:'CREATE_STREAM',\n            payload:response.data\n    });\n    history.push('/');\n};   \n// export const fetchStream = (id) => async dispatch => {\n//     const response = await stream.get(`/streams/${id}`);\n//     dispatch({\n//         type:'FETCH_STREAM',\n//         payload:response.data\n//     });\n// };\n// export const fetchStreams = () => async dispatch => {\n//     const response = await stream.get('/streams');\n//     dispatch({\n//         type:'FETCH_STREAMS',\n//         payload:response.data\n//     });\n//     history.push('/');\n// };\n// export const editStream = (id,formValues) => async dispatch =>{\n//     const response = await stream.patch(`/streams/${id}`,formValues);\n//     dispatch({\n//         type:'EDIT_STREAM',\n//         payload:response.data\n//     });\n//     history.push('/');\n// };\n// export const deleteStream = (id) => async dispatch => {\n//     await stream.delete(`/streams/${id}`);\n// dispatch({\n//     type:'DELETE_STREAM',\n//     payload:id});\n//     history.push('/');\n// };"]},"metadata":{},"sourceType":"module"}