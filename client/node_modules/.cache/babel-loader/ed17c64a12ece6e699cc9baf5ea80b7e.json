{"ast":null,"code":"var _jsxFileName = \"/home/himanshu/Desktop/24hack.it/healthcare/client/src/components/plans/PlanShow.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchplan } from '../../actions/index';\n\nconst axios = require('axios');\n\nclass PlanShow extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      inputfoodvalue: null\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchplan(this.props.match.params.id);\n  }\n\n  getFoodDetails(value) {\n    axios({\n      \"method\": \"GET\",\n      \"url\": \"https://food-calorie-data-search.p.rapidapi.com/api/search\",\n      \"headers\": {\n        \"content-type\": \"application/octet-stream\",\n        \"x-rapidapi-host\": \"food-calorie-data-search.p.rapidapi.com\",\n        \"x-rapidapi-key\": \"4fce675d58msh4c5b8d7782ff444p1f819fjsn503f83c9b052\"\n      },\n      \"params\": {\n        \"keyword\": \"\".concat(value)\n      }\n    }).then(response => {\n      console.log(response);\n\n      if (!response || response == undefined || response == null) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        }, \"Loading\");\n      } else {\n        return React.createElement(\"div\", {\n          className: \"ui segments\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"ui segment\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          },\n          __self: this\n        }, \"hello!!\")));\n      }\n    }).catch(error => {\n      console.log(error);\n      {\n        this.renderErrors(error);\n      }\n    });\n  }\n\n  renderDetails({\n    Age,\n    Weight,\n    Height,\n    Name,\n    Sex,\n    Plan,\n    waist,\n    hip\n  }) {\n    return React.createElement(\"div\", {\n      className: \"ui segments\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"ui segment\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Plan:\", Plan)), React.createElement(\"div\", {\n      className: \"ui red segment\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Name:\", Name)), React.createElement(\"div\", {\n      className: \"ui blue segment\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Age(in yrs):\", Age)), React.createElement(\"div\", {\n      className: \"ui green segment\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Weight(in KG):\", Weight)), React.createElement(\"div\", {\n      className: \"ui yellow segment\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \" Height(in cm) :\", Height)), React.createElement(\"div\", {\n      className: \"ui yellow segment\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \" Waist(in cm): \", waist)), React.createElement(\"div\", {\n      className: \"ui yellow segment\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Hip(in cm):\", hip)), React.createElement(\"div\", {\n      className: \"ui yellow segment\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Sex(in cm): \", Sex)));\n  }\n\n  render() {\n    if (!this.props.plan) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"Loading\");\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, this.renderDetails(this.props.plan), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: () => {\n        this.setState({\n          inputfoodvalue: document.getElementById('input').value\n        });\n        console.log(this.state.inputfoodvalue);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"Submit\"), this.getFoodDetails(this.state.inputfoodvalue));\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    plan: state.plans[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchplan\n})(PlanShow);","map":{"version":3,"sources":["/home/himanshu/Desktop/24hack.it/healthcare/client/src/components/plans/PlanShow.js"],"names":["React","connect","fetchplan","axios","require","PlanShow","Component","state","inputfoodvalue","componentDidMount","props","match","params","id","getFoodDetails","value","then","response","console","log","undefined","catch","error","renderErrors","renderDetails","Age","Weight","Height","Name","Sex","Plan","waist","hip","render","plan","setState","document","getElementById","mapStateToProps","ownProps","plans"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux';\nimport {fetchplan} from '../../actions/index';\nconst axios = require('axios');\nclass PlanShow extends React.Component{\n   state= {\n       inputfoodvalue:null\n   };\n    componentDidMount() {\n       this.props.fetchplan(this.props.match.params.id)\n\n   }\n   \n   getFoodDetails(value) {\n    axios({\n        \"method\":\"GET\",\n        \"url\":\"https://food-calorie-data-search.p.rapidapi.com/api/search\",\n        \"headers\":{\n        \"content-type\":\"application/octet-stream\",\n        \"x-rapidapi-host\":\"food-calorie-data-search.p.rapidapi.com\",\n        \"x-rapidapi-key\":\"4fce675d58msh4c5b8d7782ff444p1f819fjsn503f83c9b052\"\n        },\"params\":{\n        \"keyword\":`${value}`\n        }\n        })\n        .then((response)=>{\n          console.log(response)\n            if(!response||response==undefined||response==null)\n            {\n                return (<div>\n                    Loading\n                </div>);\n            }\n            else {\n                return(\n                    <div className=\"ui segments\">\n                        <div className=\"ui segment\">\n                            <p>hello!!</p>\n                        </div>\n                    </div>\n                    );\n            }\n        })\n        .catch((error)=>{\n          console.log(error)\n          {this.renderErrors(error)}\n        })\n    \n   }\n\n   renderDetails({Age,Weight,Height,Name,Sex,Plan,waist,hip}) \n   {\n       return (\n       <div className=\"ui segments\">\n       <div className=\"ui segment\">\n         <p>Plan:{Plan}</p>\n       </div>\n       <div className=\"ui red segment\">\n         <p>Name:{Name}</p>\n       </div>\n       <div className=\"ui blue segment\">\n         <p>Age(in yrs):{Age}</p>\n       </div>\n       <div className=\"ui green segment\">\n         <p>Weight(in KG):{Weight}</p>\n       </div>\n       <div className=\"ui yellow segment\">\n         <p> Height(in cm) :{Height}</p>\n       </div>\n       <div className=\"ui yellow segment\">\n         <p> Waist(in cm): {waist}</p>\n       </div>\n       <div className=\"ui yellow segment\">\n         <p>Hip(in cm):{hip}</p>\n       </div>   \n       <div className=\"ui yellow segment\">\n        <p>Sex(in cm): {Sex}</p>\n       </div>\n     </div>)\n   }\n    render() {\n        if(!this.props.plan)\n        {\n            return <div>Loading</div>\n        }\n    return (\n    <div> \n        {this.renderDetails(this.props.plan)}\n        <input type=\"text\" id=\"input\"></input>\n        <button \n        onClick={()=>{\n            this.setState({\n                inputfoodvalue:document.getElementById('input').value\n            })\n            console.log(this.state.inputfoodvalue)\n        }}>\n            Submit\n        </button>\n        {this.getFoodDetails(this.state.inputfoodvalue)}\n    </div>);\n}\n}\nconst mapStateToProps = (state,ownProps) =>{\nreturn {\n    plan:state.plans[ownProps.match.params.id]\n}\n}\nexport default connect(mapStateToProps,{fetchplan})(PlanShow);"]},"metadata":{},"sourceType":"module"}