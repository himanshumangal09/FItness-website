{"ast":null,"code":"var _jsxFileName = \"/home/himanshu/Desktop/24hack.it/healthcare/client/src/components/plans/PlanShow.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchplan } from '../../actions/index';\nimport Modal from '../../components/Modal';\n\nconst axios = require('axios');\n\nclass PlanShow extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      inputfoodvalue: null,\n      calcium: 0,\n      carbohydrt: 0,\n      cholestrl: 0,\n      energ_kcal: 0,\n      iron: 0,\n      magnesium: 0,\n      manganese: 0,\n      phosphorus: 0,\n      potassium: 0,\n      protein: 0,\n      sodium: 0,\n      vit_b6: 0,\n      vit_b12: 0,\n      vit_c: 0,\n      vit_d: 0,\n      vit_e: 0,\n      vit_k: 0,\n      vit_a_iu: 0,\n      water: 0\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchplan(this.props.match.params.id);\n  }\n\n  renderErrors() {\n    // alert('Error ); try again')\n    console.log('Null value or click again');\n  }\n\n  getFoodDetails() {\n    axios({\n      \"method\": \"GET\",\n      \"url\": \"https://food-calorie-data-search.p.rapidapi.com/api/search\",\n      \"headers\": {\n        \"content-type\": \"application/octet-stream\",\n        \"x-rapidapi-host\": \"food-calorie-data-search.p.rapidapi.com\",\n        \"x-rapidapi-key\": \"4fce675d58msh4c5b8d7782ff444p1f819fjsn503f83c9b052\"\n      },\n      \"params\": {\n        \"keyword\": \"\".concat(this.state.inputfoodvalue)\n      }\n    }).then(response => {\n      console.log(this.state.inputfoodvalue);\n      console.log(response.data[0]);\n\n      if (response.data == [] || response.data == undefined || response.data == null) {\n        return alert('NO DATA LOADED YET!!');\n      }\n\n      {\n        this.setState({\n          calcium: response.data[0].calcium,\n          carbohydrt: response.data[0].carbohydrt,\n          cholestrl: response.data[0].cholestrl,\n          energ_kcal: response.data[0].energ_kcal,\n          iron: response.data[0].iron,\n          magnesium: response.data[0].magnesium,\n          manganese: response.data[0].manganese,\n          phosphorus: response.data[0].phosphorus,\n          potassium: response.data[0].potassium,\n          protein: response.data[0].protein,\n          sodium: response.data[0].sodium,\n          vit_b6: response.data[0].vit_b6,\n          vit_b12: response.data[0].vit_b12,\n          vit_c: response.data[0].vit_c,\n          vit_d: response.data[0].vit_d,\n          vit_e: response.data[0].vit_e,\n          vit_k: response.data[0].vit_k,\n          vit_a_iu: response.data[0].vit_a_iu,\n          water: response.data[0].water\n        });\n      }\n    }).catch(error => {\n      console, log('error occ');\n      {\n        this.renderErrors();\n      }\n    });\n  }\n\n  renderDetails({\n    Age,\n    Weight,\n    Height,\n    Name,\n    Sex,\n    Plan,\n    waist,\n    hip\n  }) {\n    return React.createElement(\"div\", {\n      className: \"ui segments\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"ui segment\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Plan:\", Plan)), React.createElement(\"div\", {\n      className: \"ui red segment\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Name:\", Name)), React.createElement(\"div\", {\n      className: \"ui blue segment\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"Age(in yrs):\", Age)), React.createElement(\"div\", {\n      className: \"ui green segment\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"Weight(in KG):\", Weight)), React.createElement(\"div\", {\n      className: \"ui yellow segment\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \" Height(in cm):\", Height)), React.createElement(\"div\", {\n      className: \"ui yellow segment\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \" Waist(in cm): \", waist)), React.createElement(\"div\", {\n      className: \"ui yellow segment\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"Hip(in cm):\", hip)), React.createElement(\"div\", {\n      className: \"ui yellow segment\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"Sex(in cm): \", Sex)));\n  }\n\n  renderFoodDetails() {\n    if (this.state.calcium === 0 || this.state.calcium === undefined) {\n      return React.createElement(\"div\", {\n        className: \"ui blue segment\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, \"Searched Result Will Appear here !!\");\n    }\n\n    {\n      return React.createElement(\"div\", {\n        className: \"ui segments\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"ui segment\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, \"calcium:\", this.state.calcium)), React.createElement(\"div\", {\n        className: \"ui red segment\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, \"carbohydrt:\", this.state.carbohydrt)), React.createElement(\"div\", {\n        className: \"ui blue segment\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, \"cholestrl:\", this.state.cholestrl)), React.createElement(\"div\", {\n        className: \"ui green segment\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, \"energy kcal:\", this.state.energ_kcal)), React.createElement(\"div\", {\n        className: \"ui yellow segment\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, \" iron:\", this.state.iron)), React.createElement(\"div\", {\n        className: \"ui yellow segment\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, \" magnesium: \", this.state.magnesium)), React.createElement(\"div\", {\n        className: \"ui yellow segment\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, \"manganese:\", this.state.manganese)), React.createElement(\"div\", {\n        className: \"ui yellow segment\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, \"phosphorus: \", this.state.phosphorus)), React.createElement(\"div\", {\n        className: \"ui red segment\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, \"potassium:\", this.state.potassium)), React.createElement(\"div\", {\n        className: \"ui blue segment\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, \"protein:\", this.state.protein)), React.createElement(\"div\", {\n        className: \"ui green segment\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, \"sodium:\", this.state.sodium)), React.createElement(\"div\", {\n        className: \"ui yellow segment\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, \" vit_a_iu:\", this.state.vit_a_iu)), React.createElement(\"div\", {\n        className: \"ui yellow segment\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, \" vit_b6: \", this.state.vit_b6)), React.createElement(\"div\", {\n        className: \"ui yellow segment\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, \"vit_b12:\", this.state.vit_b12)), React.createElement(\"div\", {\n        className: \"ui yellow segment\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, \"vit_c: \", this.state.vit_c)), React.createElement(\"div\", {\n        className: \"ui red segment\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, \"vit_d:\", this.state.vit_d)), React.createElement(\"div\", {\n        className: \"ui blue segment\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, \"vit_e:\", this.state.vit_e)), React.createElement(\"div\", {\n        className: \"ui green segment\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, \"vit_k:\", this.state.vit_k)), React.createElement(\"div\", {\n        className: \"ui yellow segment\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, \" water:\", this.state.water)));\n    }\n  }\n\n  render() {\n    if (!this.props.plan) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, \"Loading\");\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, this.renderDetails(this.props.plan), React.createElement(\"label\", {\n      className: \"ui text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, \"Search Nutrition and Vitamins Value of Food and Fruits\"), React.createElement(\"input\", {\n      className: \"ui input\",\n      style: {\n        width: 900\n      },\n      type: \"text\",\n      id: \"input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"ui  button primary\",\n      onClick: () => {\n        this.setState({\n          inputfoodvalue: document.getElementById('input').value\n        });\n        {\n          this.getFoodDetails();\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, \"Submit\"), this.renderFoodDetails());\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    plan: state.plans[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchplan\n})(PlanShow);","map":{"version":3,"sources":["/home/himanshu/Desktop/24hack.it/healthcare/client/src/components/plans/PlanShow.js"],"names":["React","connect","fetchplan","Modal","axios","require","PlanShow","Component","state","inputfoodvalue","calcium","carbohydrt","cholestrl","energ_kcal","iron","magnesium","manganese","phosphorus","potassium","protein","sodium","vit_b6","vit_b12","vit_c","vit_d","vit_e","vit_k","vit_a_iu","water","componentDidMount","props","match","params","id","renderErrors","console","log","getFoodDetails","then","response","data","undefined","alert","setState","catch","error","renderDetails","Age","Weight","Height","Name","Sex","Plan","waist","hip","renderFoodDetails","render","plan","width","document","getElementById","value","mapStateToProps","ownProps","plans"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux';\nimport {fetchplan} from '../../actions/index';\nimport Modal from '../../components/Modal';\nconst axios = require('axios');\nclass PlanShow extends React.Component{\n   state= {\n       inputfoodvalue:null,\n        calcium: 0,\n        carbohydrt: 0,\n        cholestrl: 0, \n        energ_kcal: 0,\n        iron: 0,\n        magnesium:0, \n        manganese: 0,\n        phosphorus: 0, \n        potassium: 0,\n        protein: 0,\n        sodium: 0, \n        vit_b6:0,\n        vit_b12: 0,\n        vit_c: 0,\n        vit_d: 0,\n        vit_e: 0,\n        vit_k: 0,\n        vit_a_iu:0,\n        water:0\n   };\n    componentDidMount() {\n       this.props.fetchplan(this.props.match.params.id)\n   }\n   renderErrors() {\n    // alert('Error ); try again')\n    console.log('Null value or click again')\n   }\n   getFoodDetails() {\n    axios({\n        \"method\":\"GET\",\n        \"url\":\"https://food-calorie-data-search.p.rapidapi.com/api/search\",\n        \"headers\":{\n        \"content-type\":\"application/octet-stream\",\n        \"x-rapidapi-host\":\"food-calorie-data-search.p.rapidapi.com\",\n        \"x-rapidapi-key\":\"4fce675d58msh4c5b8d7782ff444p1f819fjsn503f83c9b052\"\n        },\"params\":{\n        \"keyword\":`${this.state.inputfoodvalue}`\n        }\n        })\n        .then((response)=>{\n          console.log(this.state.inputfoodvalue)\n          console.log(response.data[0])\n          if(response.data==[]||response.data==undefined||response.data==null)\n          {\n             return alert('NO DATA LOADED YET!!')\n          }\n          {\n            this.setState({\n               calcium: response.data[0].calcium,\n               carbohydrt: response.data[0].carbohydrt,\n               cholestrl: response.data[0].cholestrl, \n               energ_kcal: response.data[0].energ_kcal,\n               iron: response.data[0].iron,\n               magnesium:response.data[0].magnesium, \n               manganese: response.data[0].manganese,\n               phosphorus:response.data[0].phosphorus, \n               potassium: response.data[0].potassium,\n               protein:response.data[0].protein,\n               sodium: response.data[0].sodium, \n               vit_b6:response.data[0].vit_b6,\n               vit_b12: response.data[0].vit_b12,\n               vit_c: response.data[0].vit_c,\n               vit_d: response.data[0].vit_d,\n               vit_e: response.data[0].vit_e,\n               vit_k: response.data[0].vit_k,\n               vit_a_iu:response.data[0].vit_a_iu,\n               water:response.data[0].water\n          })\n          }\n        })\n        .catch((error)=>{\n          console,log('error occ')\n          {this.renderErrors()}\n        })\n   }\n  renderDetails({Age,Weight,Height,Name,Sex,Plan,waist,hip}) \n  {\n    return (       \n     <div className=\"ui segments\">\n     <div className=\"ui segment\">\n       <p>Plan:{Plan}</p>\n     </div>\n     <div className=\"ui red segment\">\n       <p>Name:{Name}</p>\n     </div>\n     <div className=\"ui blue segment\">\n       <p>Age(in yrs):{Age}</p>\n     </div>\n     <div className=\"ui green segment\">\n       <p>Weight(in KG):{Weight}</p>\n     </div>\n     <div className=\"ui yellow segment\">\n       <p> Height(in cm):{Height}</p>\n     </div>\n     <div className=\"ui yellow segment\">\n       <p> Waist(in cm): {waist}</p>\n     </div>\n     <div className=\"ui yellow segment\">\n       <p>Hip(in cm):{hip}</p>\n     </div>   \n     <div className=\"ui yellow segment\">\n      <p>Sex(in cm): {Sex}</p>\n     </div>\n   </div>\n    );\n  }\n  renderFoodDetails()\n  {\n    if(this.state.calcium===0||this.state.calcium===undefined)\n    {\n      return (\n      <div className=\"ui blue segment\">\n      Searched Result Will Appear here !!\n      </div>);\n    }\n\n  {\n       return (\n       <div className=\"ui segments\">\n       <div className=\"ui segment\">\n         <p>calcium:{this.state.calcium}</p>\n       </div>\n       <div className=\"ui red segment\">\n         <p>carbohydrt:{this.state.carbohydrt}</p>\n       </div>\n       <div className=\"ui blue segment\">\n         <p>cholestrl:{this.state.cholestrl}</p>\n       </div>\n       <div className=\"ui green segment\">\n         <p>energy kcal:{this.state.energ_kcal}</p>\n       </div>\n       <div className=\"ui yellow segment\">\n         <p> iron:{this.state.iron}</p>\n       </div>\n       <div className=\"ui yellow segment\">\n         <p> magnesium: {this.state.magnesium}</p>\n       </div>\n       <div className=\"ui yellow segment\">\n         <p>manganese:{this.state.manganese}</p>\n       </div>   \n       <div className=\"ui yellow segment\">\n        <p>phosphorus: {this.state.phosphorus}</p>\n       </div>      \n       <div className=\"ui red segment\">\n         <p>potassium:{this.state.potassium}</p>\n       </div>\n       <div className=\"ui blue segment\">\n         <p>protein:{this.state.protein}</p>\n       </div>\n       <div className=\"ui green segment\">\n         <p>sodium:{this.state.sodium}</p>\n       </div>\n       <div className=\"ui yellow segment\">\n         <p> vit_a_iu:{this.state.vit_a_iu}</p>\n       </div>\n       <div className=\"ui yellow segment\">\n         <p> vit_b6: {this.state.vit_b6}</p>\n       </div>\n       <div className=\"ui yellow segment\">\n         <p>vit_b12:{this.state.vit_b12}</p>\n       </div>   \n       <div className=\"ui yellow segment\">\n        <p>vit_c: {this.state.vit_c}</p>\n       </div>\n       <div className=\"ui red segment\">\n         <p>vit_d:{this.state.vit_d}</p>\n       </div>\n       <div className=\"ui blue segment\">\n         <p>vit_e:{this.state.vit_e}</p>\n       </div>\n       <div className=\"ui green segment\">\n         <p>vit_k:{this.state.vit_k}</p>\n       </div>\n       <div className=\"ui yellow segment\">\n         <p> water:{this.state.water}</p>\n       </div>\n     </div>);\n   }\n  }\n    render() {\n        if(!this.props.plan)\n        {\n            return <div>Loading</div>\n        }\n    return (\n    <div> \n        {this.renderDetails(this.props.plan)}\n        <label className=\"ui text\">Search Nutrition and Vitamins Value of Food and Fruits</label>\n        <input className=\"ui input\"  style={{width:900}} type=\"text\" id=\"input\"></input>\n        <button className=\"ui  button primary\"\n        onClick={()=>{\n            this.setState({\n                inputfoodvalue:document.getElementById('input').value\n            })\n            {this.getFoodDetails()}\n        }}>\n            Submit\n        </button>\n        {this.renderFoodDetails()}\n    </div>);\n}\n}\nconst mapStateToProps = (state,ownProps) =>{\nreturn {\n    plan:state.plans[ownProps.match.params.id]\n}\n}\nexport default connect(mapStateToProps,{fetchplan})(PlanShow);"]},"metadata":{},"sourceType":"module"}