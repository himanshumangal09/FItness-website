{"ast":null,"code":"var _jsxFileName = \"/home/himanshu/Desktop/24hack.it/healthcare/client/src/components/plans/UserDetails.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchplan } from \"../../actions/index\";\nimport FitnessVideos from \"./FitnessVideos\";\nimport FoodDetails from \"./FoodDetailsWhenCalled\";\n\nconst bodyMassIndex = require(\"body-mass-index\");\n\nconst axios = require(\"axios\");\n\nclass UserDetails extends React.Component {\n  getUserDetails() {\n    // if (!this.props.data) {\n    //     const typeOfPerson=''\n    //     const diseaseRisk=''\n    // \t\treturn <div>Loading</div>;\n    // \t}\n    {\n      const _this$props$data = this.props.data,\n            Sex = _this$props$data.Sex,\n            Plan = _this$props$data.Plan,\n            Weight = _this$props$data.Weight,\n            Height = _this$props$data.Height,\n            waist = _this$props$data.waist,\n            diseaseRisk = _this$props$data.diseaseRisk,\n            Name = _this$props$data.Name,\n            Age = _this$props$data.Age,\n            hip = _this$props$data.hip,\n            typeOfPerson = _this$props$data.typeOfPerson;\n      const bmi = bodyMassIndex(\"\".concat(Weight, \" kg\"), \"\".concat(Height, \" cm\"));\n\n      if (bmi < 18.5) {\n        typeOfPerson = \"Underweight\";\n        diseaseRisk = \"No Risk \";\n      }\n\n      if (bmi > 18.5 && bmi < 24.9) {\n        typeOfPerson = \"Normal\";\n        diseaseRisk = \"No Risk\";\n      }\n\n      if (bmi > 25.0 && bmi < 29.9) {\n        typeOfPerson = \"Overweight\";\n\n        if (Sex == \"m\" && waist <= 40 || Sex == \"f\" && waist <= 35) {\n          diseaseRisk = \"Increased\";\n        }\n\n        if (Sex == \"m\" && waist >= 40 || Sex == \"f\" && waist >= 35) {\n          diseaseRisk = \"High \";\n        }\n      }\n\n      if (bmi > 30.0 && bmi < 34.9) {\n        typeOfPerson = \"Obesity class I\";\n\n        if (Sex == \"m\" && waist <= 40 || Sex == \"f\" && waist <= 35) {\n          diseaseRisk = \"high \";\n        }\n\n        if (Sex == \"m\" && waist >= 40 || Sex == \"f\" && waist >= 35) {\n          diseaseRisk = \"Very high\";\n        }\n      }\n\n      if (bmi > 35.0 && bmi < 39.9) {\n        typeOfPerson = \"Obesity class II\";\n\n        if (Sex == \"m\" && waist <= 40 || Sex == \"f\" && waist <= 35) {\n          diseaseRisk = \"very High\";\n        }\n\n        if (Sex == \"m\" && waist >= 40 || Sex == \"f\" && waist >= 35) {\n          diseaseRisk = \"very high\";\n        }\n      }\n\n      if (bmi > 40) {\n        typeOfPerson = \"Extreme Obesity\";\n\n        if (Sex == \"m\" && waist <= 40 || Sex == \"f\" && waist <= 35) {\n          diseaseRisk = \"Extreme High\";\n        }\n\n        if (Sex == \"m\" && waist <= 40 || Sex == \"f\" && waist <= 35) {\n          diseaseRisk = \"Extreme High\";\n        }\n      }\n    }\n  }\n\n  renderDetails() {\n    const _this$props$data2 = this.props.data,\n          Sex = _this$props$data2.Sex,\n          Plan = _this$props$data2.Plan,\n          Weight = _this$props$data2.Weight,\n          Height = _this$props$data2.Height,\n          waist = _this$props$data2.waist,\n          diseaseRisk = _this$props$data2.diseaseRisk,\n          Name = _this$props$data2.Name,\n          Age = _this$props$data2.Age,\n          hip = _this$props$data2.hip,\n          typeOfPerson = _this$props$data2.typeOfPerson;\n    return React.createElement(\"div\", {\n      className: \"ui segments\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"ui segment\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Plan:\", Plan)), React.createElement(\"div\", {\n      className: \"ui red segment\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Name:\", Name)), React.createElement(\"div\", {\n      className: \"ui blue segment\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \" \", React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Age(in yrs):\", Age)), React.createElement(\"div\", {\n      className: \"ui green segment\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \" \", React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Weight(in KG):\", Weight)), React.createElement(\"div\", {\n      className: \"ui yellow segment\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \" Height(in cm):\", Height)), React.createElement(\"div\", {\n      className: \"ui yellow segment\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \" Waist(in cm): \", waist)), React.createElement(\"div\", {\n      className: \"ui yellow segment\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"Hip(in cm):\", hip)), React.createElement(\"div\", {\n      className: \"ui yellow segment\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"gender: \", Sex)), React.createElement(\"div\", {\n      className: \"ui blue segment\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"BMI: \", this.state.bmi)), React.createElement(\"div\", {\n      className: \"ui blue segment\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"According to BMI: \", this.state.typeOfPerson)), React.createElement(\"div\", {\n      className: \"ui blue segment\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Disease Risk (like type 2 diabetes,hypertension,CVD):\", \" \", this.state.diseaseRisk)));\n  }\n\n  render() {\n    if (!this.props.data) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, \"Loading\");\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, th);\n  }\n\n}\n\nexport default UserDetails;","map":{"version":3,"sources":["/home/himanshu/Desktop/24hack.it/healthcare/client/src/components/plans/UserDetails.js"],"names":["React","connect","fetchplan","FitnessVideos","FoodDetails","bodyMassIndex","require","axios","UserDetails","Component","getUserDetails","props","data","Sex","Plan","Weight","Height","waist","diseaseRisk","Name","Age","hip","typeOfPerson","bmi","renderDetails","state","render","th"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchplan } from \"../../actions/index\";\nimport FitnessVideos from \"./FitnessVideos\";\nimport FoodDetails from \"./FoodDetailsWhenCalled\";\nconst bodyMassIndex = require(\"body-mass-index\");\nconst axios = require(\"axios\");\nclass UserDetails extends React.Component {\n\tgetUserDetails() {\n\t\t// if (!this.props.data) {\n\t\t//     const typeOfPerson=''\n\t\t//     const diseaseRisk=''\n\t\t// \t\treturn <div>Loading</div>;\n\t\t// \t}\n\t\t{\n\t\t\tconst { Sex, Plan, Weight, Height, waist,diseaseRisk, Name,Age,hip,typeOfPerson} = this.props.data;\n\t\t\tconst bmi = bodyMassIndex(`${Weight} kg`, `${Height} cm`);\n\t\t\tif (bmi < 18.5) {\n\t\t\t\ttypeOfPerson = \"Underweight\";\n\t\t\t\tdiseaseRisk = \"No Risk \";\n\t\t\t}\n\t\t\tif (bmi > 18.5 && bmi < 24.9) {\n\t\t\t\ttypeOfPerson= \"Normal\";\n\t\t\t\tdiseaseRisk= \"No Risk\";\n\t\t\t}\n\t\t\tif (bmi > 25.0 && bmi < 29.9) {\n\t\t\t\t typeOfPerson= \"Overweight\" \n\t\t\t\tif ((Sex == \"m\" && waist <= 40) || (Sex == \"f\" && waist <= 35)) {\n\t\t\t\t\t diseaseRisk= \"Increased\" \n\t\t\t\t}\n\t\t\t\tif ((Sex == \"m\" && waist >= 40) || (Sex == \"f\" && waist >= 35)) {\n\t\t\t\t\t diseaseRisk= \"High \" \n\t\t\t\t}\n\t\t\t}\n\t\t\tif (bmi > 30.0 && bmi < 34.9) {\n\t\t\t\t typeOfPerson= \"Obesity class I\" \n\t\t\t\tif ((Sex == \"m\" && waist <= 40) || (Sex == \"f\" && waist <= 35)) {\n\t\t\t\t\t diseaseRisk= \"high \" \n\t\t\t\t}\n\t\t\t\tif ((Sex == \"m\" && waist >= 40) || (Sex == \"f\" && waist >= 35)) {\n\t\t\t\t\t diseaseRisk= \"Very high\" \n\t\t\t\t}\n\t\t\t}\n\t\t\tif (bmi > 35.0 && bmi < 39.9) {\n\t\t typeOfPerson= \"Obesity class II\"\n\t\t\t\tif ((Sex == \"m\" && waist <= 40) || (Sex == \"f\" && waist <= 35)) {\n\t\t\t\t\tdiseaseRisk= \"very High\"\n\t\t\t\t}\n\t\t\t\tif ((Sex == \"m\" && waist >= 40) || (Sex == \"f\" && waist >= 35)) {\n\t\t\t\t\t diseaseRisk = \"very high\" \n\t\t\t\t}\n\t\t\t}\n\t\t\tif (bmi > 40) {\n\t\t\t\t typeOfPerson= \"Extreme Obesity\" \n\t\t\t\tif ((Sex == \"m\" && waist <= 40) || (Sex == \"f\" && waist <= 35)) {\n\t\t\t\t\t diseaseRisk= \"Extreme High\" \n\t\t\t\t}\n\t\t\t\tif ((Sex == \"m\" && waist <= 40) || (Sex == \"f\" && waist <= 35)) {\n                    diseaseRisk= \"Extreme High\"\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\trenderDetails() {\n        const { Sex, Plan, Weight, Height, waist,diseaseRisk, Name,Age,hip,typeOfPerson} = this.props.data;\n\t\t\n\t\treturn (\n\t\t\t<div className='ui segments'>\n\t\t\t\t<div className='ui segment'>\n\t\t\t\t\t<p>Plan:{Plan}</p>\n\t\t\t\t</div>\n\t\t\t\t<div className='ui red segment'>\n\t\t\t\t\t<p>Name:{Name}</p>\n\t\t\t\t</div>\n\t\t\t\t<div className='ui blue segment'>\n\t\t\t\t\t{\" \"}\n\t\t\t\t\t<p>Age(in yrs):{Age}</p>\n\t\t\t\t</div>\n\t\t\t\t<div className='ui green segment'>\n\t\t\t\t\t{\" \"}\n\t\t\t\t\t<p>Weight(in KG):{Weight}</p>\n\t\t\t\t</div>\n\t\t\t\t<div className='ui yellow segment'>\n\t\t\t\t\t<p> Height(in cm):{Height}</p>\n\t\t\t\t</div>\n\t\t\t\t<div className='ui yellow segment'>\n\t\t\t\t\t<p> Waist(in cm): {waist}</p>\n\t\t\t\t</div>\n\t\t\t\t<div className='ui yellow segment'>\n\t\t\t\t\t<p>Hip(in cm):{hip}</p>\n\t\t\t\t</div>\n\t\t\t\t<div className='ui yellow segment'>\n\t\t\t\t\t<p>gender: {Sex}</p>\n\t\t\t\t</div>\n\t\t\t\t<div className='ui blue segment'>\n\t\t\t\t\t<p>BMI: {this.state.bmi}</p>\n\t\t\t\t</div>\n\t\t\t\t<div className='ui blue segment'>\n\t\t\t\t\t<p>According to BMI: {this.state.typeOfPerson}</p>\n\t\t\t\t</div>\n\t\t\t\t<div className='ui blue segment'>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tDisease Risk (like type 2 diabetes,hypertension,CVD):{\" \"}\n\t\t\t\t\t\t{this.state.diseaseRisk}\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n\n\trender() {\n\t\tif (!this.props.data) {\n\t\t\treturn <div>Loading</div>;\n\t\t}\n\t\treturn <div>\n            {th}\n        </div>;\n\t}\n}\n\nexport default UserDetails;\n"]},"metadata":{},"sourceType":"module"}