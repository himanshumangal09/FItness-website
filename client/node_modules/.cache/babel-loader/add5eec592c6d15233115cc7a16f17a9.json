{"ast":null,"code":"var _jsxFileName = \"/home/himanshu/Desktop/24hack.it/healthcare/client/src/components/plans/PlanShow.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchplan } from \"../../actions/index\";\nimport FitnessVideos from \"./FitnessVideos\";\nimport FoodDetails from './FoodDetailsWhenCalled';\n\nconst bodyMassIndex = require(\"body-mass-index\");\n\nconst axios = require(\"axios\");\n\nclass PlanShow extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      inputfoodvalue: null,\n      inputvalueforfooddetails: null,\n      calcium: 0,\n      carbohydrt: 0,\n      cholestrl: 0,\n      energ_kcal: 0,\n      iron: 0,\n      magnesium: 0,\n      manganese: 0,\n      phosphorus: 0,\n      potassium: 0,\n      protein: 0,\n      sodium: 0,\n      vit_b6: 0,\n      vit_b12: 0,\n      vit_c: 0,\n      vit_d: 0,\n      vit_e: 0,\n      vit_k: 0,\n      vit_a_iu: 0,\n      water: 0,\n      bmi: 0,\n      Age: 0,\n      Weight: 0,\n      Height: 0,\n      Name: 0,\n      Sex: 0,\n      Plan: 0,\n      waist: 0,\n      hip: 0,\n      typeOfPerson: 0,\n      diseaseRisk: 0\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchplan(this.props.match.params.id);\n  }\n\n  componentDidUpdate() {\n    this.getUserDetails();\n  } // \trenderErrors() {\n  // \t\tconsole.log(\"Null value or click again\");\n  // \t}\n  // \tgetFoodDetails() {\n  // \t\taxios({\n  // \t\t\tmethod: \"GET\",\n  // \t\t\turl: \"https://food-calorie-data-search.p.rapidapi.com/api/search\",\n  // \t\t\theaders: {\n  // \t\t\t\t\"content-type\": \"application/octet-stream\",\n  // \t\t\t\t\"x-rapidapi-host\": \"food-calorie-data-search.p.rapidapi.com\",\n  // \t\t\t\t\"x-rapidapi-key\": \"4fce675d58msh4c5b8d7782ff444p1f819fjsn503f83c9b052\"\n  // \t\t\t},\n  // \t\t\tparams: {\n  // \t\t\t\tkeyword: `${this.state.inputfoodvalue}`\n  // \t\t\t}\n  // \t\t})\n  // \t\t\t.then(response => {\n  // \t\t\t\tconsole.log(this.state.inputfoodvalue);\n  // \t\t\t\tconsole.log(response.data[0]);\n  // \t\t\t\tif (\n  // \t\t\t\t\tresponse.data == [] ||\n  // \t\t\t\t\tresponse.data == undefined ||\n  // \t\t\t\t\tresponse.data == null\n  // \t\t\t\t) {\n  // \t\t\t\t\treturn alert(\"NO DATA LOADED YET!!\");\n  // \t\t\t\t}\n  // \t\t\t\t{\n  // \t\t\t\t\tthis.setState({\n  // \t\t\t\t\t\tcalcium: response.data[0].calcium,\n  // \t\t\t\t\t\tcarbohydrt: response.data[0].carbohydrt,\n  // \t\t\t\t\t\tcholestrl: response.data[0].cholestrl,\n  // \t\t\t\t\t\tenerg_kcal: response.data[0].energ_kcal,\n  // \t\t\t\t\t\tiron: response.data[0].iron,\n  // \t\t\t\t\t\tmagnesium: response.data[0].magnesium,\n  // \t\t\t\t\t\tmanganese: response.data[0].manganese,\n  // \t\t\t\t\t\tphosphorus: response.data[0].phosphorus,\n  // \t\t\t\t\t\tpotassium: response.data[0].potassium,\n  // \t\t\t\t\t\tprotein: response.data[0].protein,\n  // \t\t\t\t\t\tsodium: response.data[0].sodium,\n  // \t\t\t\t\t\tvit_b6: response.data[0].vit_b6,\n  // \t\t\t\t\t\tvit_b12: response.data[0].vit_b12,\n  // \t\t\t\t\t\tvit_c: response.data[0].vit_c,\n  // \t\t\t\t\t\tvit_d: response.data[0].vit_d,\n  // \t\t\t\t\t\tvit_e: response.data[0].vit_e,\n  // \t\t\t\t\t\tvit_k: response.data[0].vit_k,\n  // \t\t\t\t\t\tvit_a_iu: response.data[0].vit_a_iu,\n  // \t\t\t\t\t\twater: response.data[0].water\n  // \t\t\t\t\t});\n  // \t\t\t\t}\n  // \t\t\t})\n  // \t\t\t.catch(error => {\n  // \t\t\t\tconsole.log(\"error occuried try again by clicking the button again \");\n  // \t\t\t\t{\n  // \t\t\t\t\tthis.renderErrors();\n  // \t\t\t\t}\n  // \t\t\t});\n  // \t}\n  // \tgetUserDetails() {\n  // \t\tif (!this.props.plan) {\n  // \t\t\treturn <div>Loading</div>;\n  // \t\t}\n  // \t\tthis.setState({\n  // \t\t\tPlan: this.props.plan.Plan,\n  // \t\t\tAge: this.props.plan.Age,\n  // \t\t\tWeight: this.props.plan.Weight,\n  // \t\t\tHeight: this.props.plan.Height,\n  // \t\t\tName: this.props.plan.Name,\n  // \t\t\tSex: this.props.plan.Sex,\n  // \t\t\twaist: this.props.plan.waist,\n  // \t\t\thip: this.props.plan.hip\n  // \t\t});\n  // \t\t{\n  // \t\t\tconst bmi = bodyMassIndex(\n  // \t\t\t\t`${this.state.Weight} kg`,\n  // \t\t\t\t`${this.state.Height} cm`\n  // \t\t\t);\n  // \t\t\tif (bmi < 18.5) {\n  // \t\t\t\tthis.setState({ typeOfPerson: \"Underweight\" });\n  // \t\t\t\tthis.setState({ diseaseRisk: \"No Risk \" });\n  // \t\t\t}\n  // \t\t\tif (bmi > 18.5 && bmi < 24.9) {\n  // \t\t\t\tthis.setState({ typeOfPerson: \"Normal\" });\n  // \t\t\t\tthis.setState({ diseaseRisk: \"No Risk\" });\n  // \t\t\t}\n  // \t\t\tif (bmi > 25.0 && bmi < 29.9) {\n  // \t\t\t\tthis.setState({ typeOfPerson: \"Overweight\" });\n  // \t\t\t\tif (\n  // \t\t\t\t\t(this.state.Sex == \"m\" && this.state.waist <= 40) ||\n  // \t\t\t\t\t(this.state.Sex == \"f\" && this.state.waist <= 35)\n  // \t\t\t\t) {\n  // \t\t\t\t\tthis.setState({ diseaseRisk: \"Increased\" });\n  // \t\t\t\t}\n  // \t\t\t\tif (\n  // \t\t\t\t\t(this.state.Sex == \"m\" && this.state.waist >= 40) ||\n  // \t\t\t\t\t(this.state.Sex == \"f\" && this.state.waist >= 35)\n  // \t\t\t\t) {\n  // \t\t\t\t\tthis.setState({ diseaseRisk: \"High \" });\n  // \t\t\t\t}\n  // \t\t\t}\n  // \t\t\tif (bmi > 30.0 && bmi < 34.9) {\n  // \t\t\t\tthis.setState({ typeOfPerson: \"Obesity class I\" });\n  // \t\t\t\tif (\n  // \t\t\t\t\t(this.state.Sex == \"m\" && this.state.waist <= 40) ||\n  // \t\t\t\t\t(this.state.Sex == \"f\" && this.state.waist <= 35)\n  // \t\t\t\t) {\n  // \t\t\t\t\tthis.setState({ diseaseRisk: \"high \" });\n  // \t\t\t\t}\n  // \t\t\t\tif (\n  // \t\t\t\t\t(this.state.Sex == \"m\" && this.state.waist >= 40) ||\n  // \t\t\t\t\t(this.state.Sex == \"f\" && this.state.waist >= 35)\n  // \t\t\t\t) {\n  // \t\t\t\t\tthis.setState({ diseaseRisk: \"Very high\" });\n  // \t\t\t\t}\n  // \t\t\t}\n  // \t\t\tif (bmi > 35.0 && bmi < 39.9) {\n  // \t\t\t\tthis.setState({ typeOfPerson: \"Obesity class II\" });\n  // \t\t\t\tif (\n  // \t\t\t\t\t(this.state.Sex == \"m\" && this.state.waist <= 40) ||\n  // \t\t\t\t\t(this.state.Sex == \"f\" && this.state.waist <= 35)\n  // \t\t\t\t) {\n  // \t\t\t\t\tthis.setState({ diseaseRisk: \"very High\" });\n  // \t\t\t\t}\n  // \t\t\t\tif (\n  // \t\t\t\t\t(this.state.Sex == \"m\" && this.state.waist >= 40) ||\n  // \t\t\t\t\t(this.state.Sex == \"f\" && this.state.waist >= 35)\n  // \t\t\t\t) {\n  // \t\t\t\t\tthis.setState({ diseaseRisk: \"very high\" });\n  // \t\t\t\t}\n  // \t\t\t}\n  // \t\t\tif (bmi > 40) {\n  // \t\t\t\tthis.setState({ typeOfPerson: \"Extreme Obesity\" });\n  // \t\t\t\tif (\n  // \t\t\t\t\t(this.state.Sex == \"m\" && this.state.waist <= 40) ||\n  // \t\t\t\t\t(this.state.Sex == \"f\" && this.state.waist <= 35)\n  // \t\t\t\t) {\n  // \t\t\t\t\tthis.setState({ diseaseRisk: \"Extreme High\" });\n  // \t\t\t\t}\n  // \t\t\t\tif (\n  // \t\t\t\t\t(this.state.Sex == \"m\" && this.state.waist <= 40) ||\n  // \t\t\t\t\t(this.state.Sex == \"f\" && this.state.waist <= 35)\n  // \t\t\t\t) {\n  // \t\t\t\t\tthis.setState({ diseaseRisk: \"Extreme High\" });\n  // \t\t\t\t}\n  // \t\t\t}\n  // \t\t}\n  // \t}\n  // \trenderDetails() {\n  // \t\treturn (\n  // \t\t\t<div className='ui segments'>\n  // \t\t\t\t<div className='ui segment'>\n  // \t\t\t\t\t<p>Plan:{this.state.Plan}</p>\n  // \t\t\t\t</div>\n  // \t\t\t\t<div className='ui red segment'>\n  // \t\t\t\t\t<p>Name:{this.state.Name}</p>\n  // \t\t\t\t</div>\n  // \t\t\t\t<div className='ui blue segment'>\n  // \t\t\t\t\t<p>Age(in yrs):{this.state.Age}</p>\n  // \t\t\t\t</div>\n  // \t\t\t\t<div className='ui green segment'>\n  // \t\t\t\t\t<p>Weight(in KG):{this.state.Weight}</p>\n  // \t\t\t\t</div>\n  // \t\t\t\t<div className='ui yellow segment'>\n  // \t\t\t\t\t<p> Height(in cm):{this.state.Height}</p>\n  // \t\t\t\t</div>\n  // \t\t\t\t<div className='ui yellow segment'>\n  // \t\t\t\t\t<p> Waist(in cm): {this.state.waist}</p>\n  // \t\t\t\t</div>\n  // \t\t\t\t<div className='ui yellow segment'>\n  // \t\t\t\t\t<p>Hip(in cm):{this.state.hip}</p>\n  // \t\t\t\t</div>\n  // \t\t\t\t<div className='ui yellow segment'>\n  // \t\t\t\t\t<p>gender: {this.state.Sex}</p>\n  // \t\t\t\t</div>\n  // \t\t\t\t<div className='ui blue segment'>\n  // \t\t\t\t\t<p>BMI: {this.state.bmi}</p>\n  // \t\t\t\t</div>\n  // \t\t\t\t<div className='ui blue segment'>\n  // \t\t\t\t\t<p>According to BMI: {this.state.typeOfPerson}</p>\n  // \t\t\t\t</div>\n  // \t\t\t\t<div className='ui blue segment'>\n  // \t\t\t\t\t<p>\n  // \t\t\t\t\t\tDisease Risk (like type 2 diabetes,hypertension,CVD):{\" \"}\n  // \t\t\t\t\t\t{this.state.diseaseRisk}\n  // \t\t\t\t\t</p>\n  // \t\t\t\t</div>\n  // \t\t\t</div>\n  // \t\t);\n  // \t}\n  // \trenderFoodDetails() {\n  // \t\tif (this.state.calcium === 0 || this.state.calcium === undefined) {\n  // \t\t\treturn (\n  // \t\t\t\t<div className='ui blue segment'>\n  // \t\t\t\t\tSearched Result Will Appear here !!\n  // \t\t\t\t</div>\n  // \t\t\t);\n  // \t\t}\n  // \t\t{\n  // \t\t\treturn (\n  // \t\t\t\t<div className='ui segments'>\n  // \t\t\t\t\t<div className='ui segment'>\n  // \t\t\t\t\t\t<p>calcium:{this.state.calcium}</p>\n  // \t\t\t\t\t</div>\n  // \t\t\t\t\t<div className='ui red segment'>\n  // \t\t\t\t\t\t<p>carbohydrt:{this.state.carbohydrt}</p>\n  // \t\t\t\t\t</div>\n  // \t\t\t\t\t<div className='ui blue segment'>\n  // \t\t\t\t\t\t<p>cholestrl:{this.state.cholestrl}</p>\n  // \t\t\t\t\t</div>\n  // \t\t\t\t\t<div className='ui green segment'>\n  // \t\t\t\t\t\t<p>energy kcal:{this.state.energ_kcal}</p>\n  // \t\t\t\t\t</div>\n  // \t\t\t\t\t<div className='ui yellow segment'>\n  // \t\t\t\t\t\t<p> iron:{this.state.iron}</p>\n  // \t\t\t\t\t</div>\n  // \t\t\t\t\t<div className='ui yellow segment'>\n  // \t\t\t\t\t\t<p> magnesium: {this.state.magnesium}</p>\n  // \t\t\t\t\t</div>\n  // \t\t\t\t\t<div className='ui yellow segment'>\n  // \t\t\t\t\t\t<p>manganese:{this.state.manganese}</p>\n  // \t\t\t\t\t</div>\n  // \t\t\t\t\t<div className='ui yellow segment'>\n  // \t\t\t\t\t\t<p>phosphorus: {this.state.phosphorus}</p>\n  // \t\t\t\t\t</div>\n  // \t\t\t\t\t<div className='ui red segment'>\n  // \t\t\t\t\t\t<p>potassium:{this.state.potassium}</p>\n  // \t\t\t\t\t</div>\n  // \t\t\t\t\t<div className='ui blue segment'>\n  // \t\t\t\t\t\t<p>protein:{this.state.protein}</p>\n  // \t\t\t\t\t</div>\n  // \t\t\t\t\t<div className='ui green segment'>\n  // \t\t\t\t\t\t<p>sodium:{this.state.sodium}</p>\n  // \t\t\t\t\t</div>\n  // \t\t\t\t\t<div className='ui yellow segment'>\n  // \t\t\t\t\t\t<p> vit_a_iu:{this.state.vit_a_iu}</p>\n  // \t\t\t\t\t</div>\n  // \t\t\t\t\t<div className='ui yellow segment'>\n  // \t\t\t\t\t\t<p> vit_b6: {this.state.vit_b6}</p>\n  // \t\t\t\t\t</div>\n  // \t\t\t\t\t<div className='ui yellow segment'>\n  // \t\t\t\t\t\t<p>vit_b12:{this.state.vit_b12}</p>\n  // \t\t\t\t\t</div>\n  // \t\t\t\t\t<div className='ui yellow segment'>\n  // \t\t\t\t\t\t<p>vit_c: {this.state.vit_c}</p>\n  // \t\t\t\t\t</div>\n  // \t\t\t\t\t<div className='ui red segment'>\n  // \t\t\t\t\t\t<p>vit_d:{this.state.vit_d}</p>\n  // \t\t\t\t\t</div>\n  // \t\t\t\t\t<div className='ui blue segment'>\n  // \t\t\t\t\t\t<p>vit_e:{this.state.vit_e}</p>\n  // \t\t\t\t\t</div>\n  // \t\t\t\t\t<div className='ui green segment'>\n  // \t\t\t\t\t\t<p>vit_k:{this.state.vit_k}</p>\n  // \t\t\t\t\t</div>\n  // \t\t\t\t\t<div className='ui yellow segment'>\n  // \t\t\t\t\t\t<p> water:{this.state.water}</p>\n  // \t\t\t\t\t</div>\n  // \t\t\t\t</div>\n  // \t\t\t);\n  // \t\t}\n  // \t}\n\n\n  renderHelper() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314\n      },\n      __self: this\n    }, \"Food Details\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"inputvalueforfooddetails\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.setState({\n        inputvalueforfooddetails: document.getElementById('inputvalueforfooddetails').value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316\n      },\n      __self: this\n    }));\n  }\n\n  render() {\n    if (!this.props.plan) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326\n        },\n        __self: this\n      }, \"Loading\");\n    }\n\n    return React.createElement(\"div\", {\n      className: \"ui form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"ui text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331\n      },\n      __self: this\n    }, \"Place for Exercise (inside or outside)\"), React.createElement(\"input\", {\n      style: {\n        width: 900\n      },\n      type: \"text\",\n      id: \"input2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      className: \"ui  button primary\",\n      onClick: () => {\n        this.setState({\n          inputfoodvalue: document.getElementById(\"input\").value,\n          placeForExercise: document.getElementById(\"input2\").value || \"inside\"\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336\n      },\n      __self: this\n    }, \"Submit\"), \" }\", React.createElement(FoodDetails, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    plan: state.plans[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchplan\n})(PlanShow);","map":{"version":3,"sources":["/home/himanshu/Desktop/24hack.it/healthcare/client/src/components/plans/PlanShow.js"],"names":["React","connect","fetchplan","FitnessVideos","FoodDetails","bodyMassIndex","require","axios","PlanShow","Component","state","inputfoodvalue","inputvalueforfooddetails","calcium","carbohydrt","cholestrl","energ_kcal","iron","magnesium","manganese","phosphorus","potassium","protein","sodium","vit_b6","vit_b12","vit_c","vit_d","vit_e","vit_k","vit_a_iu","water","bmi","Age","Weight","Height","Name","Sex","Plan","waist","hip","typeOfPerson","diseaseRisk","componentDidMount","props","match","params","id","componentDidUpdate","getUserDetails","renderHelper","setState","document","getElementById","value","render","plan","width","placeForExercise","mapStateToProps","ownProps","plans"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,QAA0B,qBAA1B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,WAAP,MAAwB,yBAAxB;;AACA,MAAMC,aAAa,GAAGC,OAAO,CAAC,iBAAD,CAA7B;;AACA,MAAMC,KAAK,GAAGD,OAAO,CAAC,OAAD,CAArB;;AACA,MAAME,QAAN,SAAuBR,KAAK,CAACS,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACtCC,KADsC,GAC9B;AACPC,MAAAA,cAAc,EAAE,IADT;AAEPC,MAAAA,wBAAwB,EAAC,IAFlB;AAGPC,MAAAA,OAAO,EAAE,CAHF;AAIPC,MAAAA,UAAU,EAAE,CAJL;AAKPC,MAAAA,SAAS,EAAE,CALJ;AAMPC,MAAAA,UAAU,EAAE,CANL;AAOPC,MAAAA,IAAI,EAAE,CAPC;AAQPC,MAAAA,SAAS,EAAE,CARJ;AASPC,MAAAA,SAAS,EAAE,CATJ;AAUPC,MAAAA,UAAU,EAAE,CAVL;AAWPC,MAAAA,SAAS,EAAE,CAXJ;AAYPC,MAAAA,OAAO,EAAE,CAZF;AAaPC,MAAAA,MAAM,EAAE,CAbD;AAcPC,MAAAA,MAAM,EAAE,CAdD;AAePC,MAAAA,OAAO,EAAE,CAfF;AAgBPC,MAAAA,KAAK,EAAE,CAhBA;AAiBPC,MAAAA,KAAK,EAAE,CAjBA;AAkBPC,MAAAA,KAAK,EAAE,CAlBA;AAmBPC,MAAAA,KAAK,EAAE,CAnBA;AAoBPC,MAAAA,QAAQ,EAAE,CApBH;AAqBPC,MAAAA,KAAK,EAAE,CArBA;AAsBPC,MAAAA,GAAG,EAAE,CAtBE;AAuBPC,MAAAA,GAAG,EAAE,CAvBE;AAwBPC,MAAAA,MAAM,EAAE,CAxBD;AAyBPC,MAAAA,MAAM,EAAE,CAzBD;AA0BPC,MAAAA,IAAI,EAAE,CA1BC;AA2BPC,MAAAA,GAAG,EAAE,CA3BE;AA4BPC,MAAAA,IAAI,EAAE,CA5BC;AA6BPC,MAAAA,KAAK,EAAE,CA7BA;AA8BPC,MAAAA,GAAG,EAAE,CA9BE;AA+BPC,MAAAA,YAAY,EAAE,CA/BP;AAgCPC,MAAAA,WAAW,EAAE;AAhCN,KAD8B;AAAA;;AAmCtCC,EAAAA,iBAAiB,GAAG;AACnB,SAAKC,KAAL,CAAW1C,SAAX,CAAqB,KAAK0C,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA7C;AACA;;AACDC,EAAAA,kBAAkB,GAAG;AACpB,SAAKC,cAAL;AACA,GAxCqC,CAyCvd,WACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADD,EAEC;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,EAAE,EAAC,0BAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFD,EAGC;AAAQ,MAAA,OAAO,EACd,KAAKC,QAAL,CAAc;AACdvC,QAAAA,wBAAwB,EAACwC,QAAQ,CAACC,cAAT,CAAwB,0BAAxB,EAAoDC;AAD/D,OAAd,CADD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHD,CADD;AAWA;;AACCC,EAAAA,MAAM,GAAG;AACR,QAAI,CAAC,KAAKX,KAAL,CAAWY,IAAhB,EAAsB;AACrB,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAP;AACA;;AACD,WACC;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAO,MAAA,SAAS,EAAC,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gDADD,EAIC;AAAO,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAAd;AAA8B,MAAA,IAAI,EAAC,MAAnC;AAA0C,MAAA,EAAE,EAAC,QAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJD,CADA,EAOA;AACC,MAAA,SAAS,EAAC,oBADX;AAEC,MAAA,OAAO,EAAE,MAAM;AACd,aAAKN,QAAL,CAAc;AACbxC,UAAAA,cAAc,EAAEyC,QAAQ,CAACC,cAAT,CAAwB,OAAxB,EAAiCC,KADpC;AAEbI,UAAAA,gBAAgB,EACfN,QAAQ,CAACC,cAAT,CAAwB,QAAxB,EAAkCC,KAAlC,IAA2C;AAH/B,SAAd;AAKA,OARF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPA,QAmBA,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAnBA,CADD;AAuBD;;AAvVqC;;AAyVvC,MAAMK,eAAe,GAAG,CAACjD,KAAD,EAAQkD,QAAR,KAAqB;AAC5C,SAAO;AACNJ,IAAAA,IAAI,EAAE9C,KAAK,CAACmD,KAAN,CAAYD,QAAQ,CAACf,KAAT,CAAeC,MAAf,CAAsBC,EAAlC;AADA,GAAP;AAGA,CAJD;;AAKA,eAAe9C,OAAO,CACrB0D,eADqB,EAErB;AAAEzD,EAAAA;AAAF,CAFqB,CAAP,CAGbM,QAHa,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchplan } from \"../../actions/index\";\nimport FitnessVideos from \"./FitnessVideos\";\nimport FoodDetails from './FoodDetailsWhenCalled';\nconst bodyMassIndex = require(\"body-mass-index\");\nconst axios = require(\"axios\");\nclass PlanShow extends React.Component {\n\tstate = {\n\t\tinputfoodvalue: null,\n\t\tinputvalueforfooddetails:null,\n\t\tcalcium: 0,\n\t\tcarbohydrt: 0,\n\t\tcholestrl: 0,\n\t\tenerg_kcal: 0,\n\t\tiron: 0,\n\t\tmagnesium: 0,\n\t\tmanganese: 0,\n\t\tphosphorus: 0,\n\t\tpotassium: 0,\n\t\tprotein: 0,\n\t\tsodium: 0,\n\t\tvit_b6: 0,\n\t\tvit_b12: 0,\n\t\tvit_c: 0,\n\t\tvit_d: 0,\n\t\tvit_e: 0,\n\t\tvit_k: 0,\n\t\tvit_a_iu: 0,\n\t\twater: 0,\n\t\tbmi: 0,\n\t\tAge: 0,\n\t\tWeight: 0,\n\t\tHeight: 0,\n\t\tName: 0,\n\t\tSex: 0,\n\t\tPlan: 0,\n\t\twaist: 0,\n\t\thip: 0,\n\t\ttypeOfPerson: 0,\n\t\tdiseaseRisk: 0\n\t};\n\tcomponentDidMount() {\n\t\tthis.props.fetchplan(this.props.match.params.id);\n\t}\n\tcomponentDidUpdate() {\n\t\tthis.getUserDetails();\n\t}\n// \trenderErrors() {\n// \t\tconsole.log(\"Null value or click again\");\n// \t}\n// \tgetFoodDetails() {\n// \t\taxios({\n// \t\t\tmethod: \"GET\",\n// \t\t\turl: \"https://food-calorie-data-search.p.rapidapi.com/api/search\",\n// \t\t\theaders: {\n// \t\t\t\t\"content-type\": \"application/octet-stream\",\n// \t\t\t\t\"x-rapidapi-host\": \"food-calorie-data-search.p.rapidapi.com\",\n// \t\t\t\t\"x-rapidapi-key\": \"4fce675d58msh4c5b8d7782ff444p1f819fjsn503f83c9b052\"\n// \t\t\t},\n// \t\t\tparams: {\n// \t\t\t\tkeyword: `${this.state.inputfoodvalue}`\n// \t\t\t}\n// \t\t})\n// \t\t\t.then(response => {\n// \t\t\t\tconsole.log(this.state.inputfoodvalue);\n// \t\t\t\tconsole.log(response.data[0]);\n// \t\t\t\tif (\n// \t\t\t\t\tresponse.data == [] ||\n// \t\t\t\t\tresponse.data == undefined ||\n// \t\t\t\t\tresponse.data == null\n// \t\t\t\t) {\n// \t\t\t\t\treturn alert(\"NO DATA LOADED YET!!\");\n// \t\t\t\t}\n// \t\t\t\t{\n// \t\t\t\t\tthis.setState({\n// \t\t\t\t\t\tcalcium: response.data[0].calcium,\n// \t\t\t\t\t\tcarbohydrt: response.data[0].carbohydrt,\n// \t\t\t\t\t\tcholestrl: response.data[0].cholestrl,\n// \t\t\t\t\t\tenerg_kcal: response.data[0].energ_kcal,\n// \t\t\t\t\t\tiron: response.data[0].iron,\n// \t\t\t\t\t\tmagnesium: response.data[0].magnesium,\n// \t\t\t\t\t\tmanganese: response.data[0].manganese,\n// \t\t\t\t\t\tphosphorus: response.data[0].phosphorus,\n// \t\t\t\t\t\tpotassium: response.data[0].potassium,\n// \t\t\t\t\t\tprotein: response.data[0].protein,\n// \t\t\t\t\t\tsodium: response.data[0].sodium,\n// \t\t\t\t\t\tvit_b6: response.data[0].vit_b6,\n// \t\t\t\t\t\tvit_b12: response.data[0].vit_b12,\n// \t\t\t\t\t\tvit_c: response.data[0].vit_c,\n// \t\t\t\t\t\tvit_d: response.data[0].vit_d,\n// \t\t\t\t\t\tvit_e: response.data[0].vit_e,\n// \t\t\t\t\t\tvit_k: response.data[0].vit_k,\n// \t\t\t\t\t\tvit_a_iu: response.data[0].vit_a_iu,\n// \t\t\t\t\t\twater: response.data[0].water\n// \t\t\t\t\t});\n// \t\t\t\t}\n// \t\t\t})\n// \t\t\t.catch(error => {\n// \t\t\t\tconsole.log(\"error occuried try again by clicking the button again \");\n// \t\t\t\t{\n// \t\t\t\t\tthis.renderErrors();\n// \t\t\t\t}\n// \t\t\t});\n// \t}\n// \tgetUserDetails() {\n// \t\tif (!this.props.plan) {\n// \t\t\treturn <div>Loading</div>;\n// \t\t}\n// \t\tthis.setState({\n// \t\t\tPlan: this.props.plan.Plan,\n// \t\t\tAge: this.props.plan.Age,\n// \t\t\tWeight: this.props.plan.Weight,\n// \t\t\tHeight: this.props.plan.Height,\n// \t\t\tName: this.props.plan.Name,\n// \t\t\tSex: this.props.plan.Sex,\n// \t\t\twaist: this.props.plan.waist,\n// \t\t\thip: this.props.plan.hip\n// \t\t});\n\n// \t\t{\n// \t\t\tconst bmi = bodyMassIndex(\n// \t\t\t\t`${this.state.Weight} kg`,\n// \t\t\t\t`${this.state.Height} cm`\n// \t\t\t);\n\n// \t\t\tif (bmi < 18.5) {\n// \t\t\t\tthis.setState({ typeOfPerson: \"Underweight\" });\n// \t\t\t\tthis.setState({ diseaseRisk: \"No Risk \" });\n// \t\t\t}\n// \t\t\tif (bmi > 18.5 && bmi < 24.9) {\n// \t\t\t\tthis.setState({ typeOfPerson: \"Normal\" });\n// \t\t\t\tthis.setState({ diseaseRisk: \"No Risk\" });\n// \t\t\t}\n// \t\t\tif (bmi > 25.0 && bmi < 29.9) {\n// \t\t\t\tthis.setState({ typeOfPerson: \"Overweight\" });\n// \t\t\t\tif (\n// \t\t\t\t\t(this.state.Sex == \"m\" && this.state.waist <= 40) ||\n// \t\t\t\t\t(this.state.Sex == \"f\" && this.state.waist <= 35)\n// \t\t\t\t) {\n// \t\t\t\t\tthis.setState({ diseaseRisk: \"Increased\" });\n// \t\t\t\t}\n// \t\t\t\tif (\n// \t\t\t\t\t(this.state.Sex == \"m\" && this.state.waist >= 40) ||\n// \t\t\t\t\t(this.state.Sex == \"f\" && this.state.waist >= 35)\n// \t\t\t\t) {\n// \t\t\t\t\tthis.setState({ diseaseRisk: \"High \" });\n// \t\t\t\t}\n// \t\t\t}\n// \t\t\tif (bmi > 30.0 && bmi < 34.9) {\n// \t\t\t\tthis.setState({ typeOfPerson: \"Obesity class I\" });\n// \t\t\t\tif (\n// \t\t\t\t\t(this.state.Sex == \"m\" && this.state.waist <= 40) ||\n// \t\t\t\t\t(this.state.Sex == \"f\" && this.state.waist <= 35)\n// \t\t\t\t) {\n// \t\t\t\t\tthis.setState({ diseaseRisk: \"high \" });\n// \t\t\t\t}\n// \t\t\t\tif (\n// \t\t\t\t\t(this.state.Sex == \"m\" && this.state.waist >= 40) ||\n// \t\t\t\t\t(this.state.Sex == \"f\" && this.state.waist >= 35)\n// \t\t\t\t) {\n// \t\t\t\t\tthis.setState({ diseaseRisk: \"Very high\" });\n// \t\t\t\t}\n// \t\t\t}\n// \t\t\tif (bmi > 35.0 && bmi < 39.9) {\n// \t\t\t\tthis.setState({ typeOfPerson: \"Obesity class II\" });\n// \t\t\t\tif (\n// \t\t\t\t\t(this.state.Sex == \"m\" && this.state.waist <= 40) ||\n// \t\t\t\t\t(this.state.Sex == \"f\" && this.state.waist <= 35)\n// \t\t\t\t) {\n// \t\t\t\t\tthis.setState({ diseaseRisk: \"very High\" });\n// \t\t\t\t}\n// \t\t\t\tif (\n// \t\t\t\t\t(this.state.Sex == \"m\" && this.state.waist >= 40) ||\n// \t\t\t\t\t(this.state.Sex == \"f\" && this.state.waist >= 35)\n// \t\t\t\t) {\n// \t\t\t\t\tthis.setState({ diseaseRisk: \"very high\" });\n// \t\t\t\t}\n// \t\t\t}\n// \t\t\tif (bmi > 40) {\n// \t\t\t\tthis.setState({ typeOfPerson: \"Extreme Obesity\" });\n// \t\t\t\tif (\n// \t\t\t\t\t(this.state.Sex == \"m\" && this.state.waist <= 40) ||\n// \t\t\t\t\t(this.state.Sex == \"f\" && this.state.waist <= 35)\n// \t\t\t\t) {\n// \t\t\t\t\tthis.setState({ diseaseRisk: \"Extreme High\" });\n// \t\t\t\t}\n// \t\t\t\tif (\n// \t\t\t\t\t(this.state.Sex == \"m\" && this.state.waist <= 40) ||\n// \t\t\t\t\t(this.state.Sex == \"f\" && this.state.waist <= 35)\n// \t\t\t\t) {\n// \t\t\t\t\tthis.setState({ diseaseRisk: \"Extreme High\" });\n// \t\t\t\t}\n// \t\t\t}\n// \t\t}\n// \t}\n// \trenderDetails() {\n// \t\treturn (\n// \t\t\t<div className='ui segments'>\n// \t\t\t\t<div className='ui segment'>\n// \t\t\t\t\t<p>Plan:{this.state.Plan}</p>\n// \t\t\t\t</div>\n// \t\t\t\t<div className='ui red segment'>\n// \t\t\t\t\t<p>Name:{this.state.Name}</p>\n// \t\t\t\t</div>\n// \t\t\t\t<div className='ui blue segment'>\n// \t\t\t\t\t<p>Age(in yrs):{this.state.Age}</p>\n// \t\t\t\t</div>\n// \t\t\t\t<div className='ui green segment'>\n// \t\t\t\t\t<p>Weight(in KG):{this.state.Weight}</p>\n// \t\t\t\t</div>\n// \t\t\t\t<div className='ui yellow segment'>\n// \t\t\t\t\t<p> Height(in cm):{this.state.Height}</p>\n// \t\t\t\t</div>\n// \t\t\t\t<div className='ui yellow segment'>\n// \t\t\t\t\t<p> Waist(in cm): {this.state.waist}</p>\n// \t\t\t\t</div>\n// \t\t\t\t<div className='ui yellow segment'>\n// \t\t\t\t\t<p>Hip(in cm):{this.state.hip}</p>\n// \t\t\t\t</div>\n// \t\t\t\t<div className='ui yellow segment'>\n// \t\t\t\t\t<p>gender: {this.state.Sex}</p>\n// \t\t\t\t</div>\n// \t\t\t\t<div className='ui blue segment'>\n// \t\t\t\t\t<p>BMI: {this.state.bmi}</p>\n// \t\t\t\t</div>\n// \t\t\t\t<div className='ui blue segment'>\n// \t\t\t\t\t<p>According to BMI: {this.state.typeOfPerson}</p>\n// \t\t\t\t</div>\n// \t\t\t\t<div className='ui blue segment'>\n// \t\t\t\t\t<p>\n// \t\t\t\t\t\tDisease Risk (like type 2 diabetes,hypertension,CVD):{\" \"}\n// \t\t\t\t\t\t{this.state.diseaseRisk}\n// \t\t\t\t\t</p>\n// \t\t\t\t</div>\n// \t\t\t</div>\n// \t\t);\n// \t}\n// \trenderFoodDetails() {\n// \t\tif (this.state.calcium === 0 || this.state.calcium === undefined) {\n// \t\t\treturn (\n// \t\t\t\t<div className='ui blue segment'>\n// \t\t\t\t\tSearched Result Will Appear here !!\n// \t\t\t\t</div>\n// \t\t\t);\n// \t\t}\n// \t\t{\n// \t\t\treturn (\n// \t\t\t\t<div className='ui segments'>\n// \t\t\t\t\t<div className='ui segment'>\n// \t\t\t\t\t\t<p>calcium:{this.state.calcium}</p>\n// \t\t\t\t\t</div>\n// \t\t\t\t\t<div className='ui red segment'>\n// \t\t\t\t\t\t<p>carbohydrt:{this.state.carbohydrt}</p>\n// \t\t\t\t\t</div>\n// \t\t\t\t\t<div className='ui blue segment'>\n// \t\t\t\t\t\t<p>cholestrl:{this.state.cholestrl}</p>\n// \t\t\t\t\t</div>\n// \t\t\t\t\t<div className='ui green segment'>\n// \t\t\t\t\t\t<p>energy kcal:{this.state.energ_kcal}</p>\n// \t\t\t\t\t</div>\n// \t\t\t\t\t<div className='ui yellow segment'>\n// \t\t\t\t\t\t<p> iron:{this.state.iron}</p>\n// \t\t\t\t\t</div>\n// \t\t\t\t\t<div className='ui yellow segment'>\n// \t\t\t\t\t\t<p> magnesium: {this.state.magnesium}</p>\n// \t\t\t\t\t</div>\n// \t\t\t\t\t<div className='ui yellow segment'>\n// \t\t\t\t\t\t<p>manganese:{this.state.manganese}</p>\n// \t\t\t\t\t</div>\n// \t\t\t\t\t<div className='ui yellow segment'>\n// \t\t\t\t\t\t<p>phosphorus: {this.state.phosphorus}</p>\n// \t\t\t\t\t</div>\n// \t\t\t\t\t<div className='ui red segment'>\n// \t\t\t\t\t\t<p>potassium:{this.state.potassium}</p>\n// \t\t\t\t\t</div>\n// \t\t\t\t\t<div className='ui blue segment'>\n// \t\t\t\t\t\t<p>protein:{this.state.protein}</p>\n// \t\t\t\t\t</div>\n// \t\t\t\t\t<div className='ui green segment'>\n// \t\t\t\t\t\t<p>sodium:{this.state.sodium}</p>\n// \t\t\t\t\t</div>\n// \t\t\t\t\t<div className='ui yellow segment'>\n// \t\t\t\t\t\t<p> vit_a_iu:{this.state.vit_a_iu}</p>\n// \t\t\t\t\t</div>\n// \t\t\t\t\t<div className='ui yellow segment'>\n// \t\t\t\t\t\t<p> vit_b6: {this.state.vit_b6}</p>\n// \t\t\t\t\t</div>\n// \t\t\t\t\t<div className='ui yellow segment'>\n// \t\t\t\t\t\t<p>vit_b12:{this.state.vit_b12}</p>\n// \t\t\t\t\t</div>\n// \t\t\t\t\t<div className='ui yellow segment'>\n// \t\t\t\t\t\t<p>vit_c: {this.state.vit_c}</p>\n// \t\t\t\t\t</div>\n// \t\t\t\t\t<div className='ui red segment'>\n// \t\t\t\t\t\t<p>vit_d:{this.state.vit_d}</p>\n// \t\t\t\t\t</div>\n// \t\t\t\t\t<div className='ui blue segment'>\n// \t\t\t\t\t\t<p>vit_e:{this.state.vit_e}</p>\n// \t\t\t\t\t</div>\n// \t\t\t\t\t<div className='ui green segment'>\n// \t\t\t\t\t\t<p>vit_k:{this.state.vit_k}</p>\n// \t\t\t\t\t</div>\n// \t\t\t\t\t<div className='ui yellow segment'>\n// \t\t\t\t\t\t<p> water:{this.state.water}</p>\n// \t\t\t\t\t</div>\n// \t\t\t\t</div>\n// \t\t\t);\n// \t\t}\n// \t}\nrenderHelper() {\n\treturn(\n\t\t<div>\n\t\t\t<label>Food Details</label>\n\t\t\t<input type=\"text\" id=\"inputvalueforfooddetails\"></input>\n\t\t\t<button onClick={\n\t\t\t\tthis.setState({\n\t\t\t\tinputvalueforfooddetails:document.getElementById('inputvalueforfooddetails').value\t\n\t\t\t\t})\n\t\t\t}/>\n\t\t</div>\n\t)\n}\n \trender() {\n \t\tif (!this.props.plan) {\n \t\t\treturn <div>Loading</div>;\n \t\t}\n \t\treturn (\n \t\t\t<div className='ui form'>\n\t\t\t\t<div className='field'>\n\t\t\t\t\t<label className='ui text'>\n\t\t\t\t\t\tPlace for Exercise (inside or outside)\n\t\t\t\t\t</label>\n\t\t\t\t\t<input style={{ width: 900 }} type='text' id='input2'></input>\n\t\t\t\t</div>\n\t\t\t\t<button\n\t\t\t\t\tclassName='ui  button primary'\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\tinputfoodvalue: document.getElementById(\"input\").value,\n\t\t\t\t\t\t\tplaceForExercise:\n\t\t\t\t\t\t\t\tdocument.getElementById(\"input2\").value || \"inside\"\n\t\t\t\t\t\t});\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\tSubmit\n\t\t\t\t</button> }\n\t\t\t\t<FoodDetails/>\n\t\t</div>\n\t\t);\n\t}\n}\nconst mapStateToProps = (state, ownProps) => {\n\treturn {\n\t\tplan: state.plans[ownProps.match.params.id]\n\t};\n};\nexport default connect(\n\tmapStateToProps,\n\t{ fetchplan }\n)(PlanShow);\n"]},"metadata":{},"sourceType":"module"}