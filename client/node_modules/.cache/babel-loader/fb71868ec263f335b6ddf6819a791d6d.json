{"ast":null,"code":"var _jsxFileName = \"/home/himanshu/Desktop/24hack.it/healthcare/client/src/components/plans/PlanShow.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchplan } from \"../../actions/index\";\nimport FitnessVideos from \"./FitnessVideos\";\nimport FoodDetails from \"./FoodDetailsWhenCalled\";\n\nconst bodyMassIndex = require(\"body-mass-index\");\n\nconst axios = require(\"axios\");\n\nclass PlanShow extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      inputfoodvalue: null,\n      inputvalueforfooddetails: null,\n      bmi: 0,\n      Age: 0,\n      Weight: 0,\n      Height: 0,\n      Name: 0,\n      Sex: 0,\n      Plan: 0,\n      waist: 0,\n      hip: 0,\n      typeOfPerson: 0,\n      diseaseRisk: 0\n    };\n\n    this.helpplease = () => {\n      if (document.getElementById(\"inputvalueforfooddetails\").value != null) {\n        this.setState({\n          inputvalueforfooddetails: document.getElementById(\"inputvalueforfooddetails\").value\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchplan(this.props.match.params.id);\n  } // componentDidUpdate() {\n  // \tthis.getUserDetails();\n  // }\n  // \trenderErrors() {\n  // \t\tconsole.log(\"Null value or click again\");\n  // \t}\n  // \tgetUserDetails() {\n  // \t\tif (!this.props.plan) {\n  // \t\t\treturn <div>Loading</div>;\n  // \t\t}\n  // \t\tthis.setState({\n  // \t\t\tPlan: this.props.plan.Plan,\n  // \t\t\tAge: this.props.plan.Age,\n  // \t\t\tWeight: this.props.plan.Weight,\n  // \t\t\tHeight: this.props.plan.Height,\n  // \t\t\tName: this.props.plan.Name,\n  // \t\t\tSex: this.props.plan.Sex,\n  // \t\t\twaist: this.props.plan.waist,\n  // \t\t\thip: this.props.plan.hip\n  // \t\t});\n  // \t\t{\n  // \t\t\tconst bmi = bodyMassIndex(\n  // \t\t\t\t`${this.state.Weight} kg`,\n  // \t\t\t\t`${this.state.Height} cm`\n  // \t\t\t);\n  // \t\t\tif (bmi < 18.5) {\n  // \t\t\t\tthis.setState({ typeOfPerson: \"Underweight\" });\n  // \t\t\t\tthis.setState({ diseaseRisk: \"No Risk \" });\n  // \t\t\t}\n  // \t\t\tif (bmi > 18.5 && bmi < 24.9) {\n  // \t\t\t\tthis.setState({ typeOfPerson: \"Normal\" });\n  // \t\t\t\tthis.setState({ diseaseRisk: \"No Risk\" });\n  // \t\t\t}\n  // \t\t\tif (bmi > 25.0 && bmi < 29.9) {\n  // \t\t\t\tthis.setState({ typeOfPerson: \"Overweight\" });\n  // \t\t\t\tif (\n  // \t\t\t\t\t(this.state.Sex == \"m\" && this.state.waist <= 40) ||\n  // \t\t\t\t\t(this.state.Sex == \"f\" && this.state.waist <= 35)\n  // \t\t\t\t) {\n  // \t\t\t\t\tthis.setState({ diseaseRisk: \"Increased\" });\n  // \t\t\t\t}\n  // \t\t\t\tif (\n  // \t\t\t\t\t(this.state.Sex == \"m\" && this.state.waist >= 40) ||\n  // \t\t\t\t\t(this.state.Sex == \"f\" && this.state.waist >= 35)\n  // \t\t\t\t) {\n  // \t\t\t\t\tthis.setState({ diseaseRisk: \"High \" });\n  // \t\t\t\t}\n  // \t\t\t}\n  // \t\t\tif (bmi > 30.0 && bmi < 34.9) {\n  // \t\t\t\tthis.setState({ typeOfPerson: \"Obesity class I\" });\n  // \t\t\t\tif (\n  // \t\t\t\t\t(this.state.Sex == \"m\" && this.state.waist <= 40) ||\n  // \t\t\t\t\t(this.state.Sex == \"f\" && this.state.waist <= 35)\n  // \t\t\t\t) {\n  // \t\t\t\t\tthis.setState({ diseaseRisk: \"high \" });\n  // \t\t\t\t}\n  // \t\t\t\tif (\n  // \t\t\t\t\t(this.state.Sex == \"m\" && this.state.waist >= 40) ||\n  // \t\t\t\t\t(this.state.Sex == \"f\" && this.state.waist >= 35)\n  // \t\t\t\t) {\n  // \t\t\t\t\tthis.setState({ diseaseRisk: \"Very high\" });\n  // \t\t\t\t}\n  // \t\t\t}\n  // \t\t\tif (bmi > 35.0 && bmi < 39.9) {\n  // \t\t\t\tthis.setState({ typeOfPerson: \"Obesity class II\" });\n  // \t\t\t\tif (\n  // \t\t\t\t\t(this.state.Sex == \"m\" && this.state.waist <= 40) ||\n  // \t\t\t\t\t(this.state.Sex == \"f\" && this.state.waist <= 35)\n  // \t\t\t\t) {\n  // \t\t\t\t\tthis.setState({ diseaseRisk: \"very High\" });\n  // \t\t\t\t}\n  // \t\t\t\tif (\n  // \t\t\t\t\t(this.state.Sex == \"m\" && this.state.waist >= 40) ||\n  // \t\t\t\t\t(this.state.Sex == \"f\" && this.state.waist >= 35)\n  // \t\t\t\t) {\n  // \t\t\t\t\tthis.setState({ diseaseRisk: \"very high\" });\n  // \t\t\t\t}\n  // \t\t\t}\n  // \t\t\tif (bmi > 40) {\n  // \t\t\t\tthis.setState({ typeOfPerson: \"Extreme Obesity\" });\n  // \t\t\t\tif (\n  // \t\t\t\t\t(this.state.Sex == \"m\" && this.state.waist <= 40) ||\n  // \t\t\t\t\t(this.state.Sex == \"f\" && this.state.waist <= 35)\n  // \t\t\t\t) {\n  // \t\t\t\t\tthis.setState({ diseaseRisk: \"Extreme High\" });\n  // \t\t\t\t}\n  // \t\t\t\tif (\n  // \t\t\t\t\t(this.state.Sex == \"m\" && this.state.waist <= 40) ||\n  // \t\t\t\t\t(this.state.Sex == \"f\" && this.state.waist <= 35)\n  // \t\t\t\t) {\n  // \t\t\t\t\tthis.setState({ diseaseRisk: \"Extreme High\" });\n  // \t\t\t\t}\n  // \t\t\t}\n  // \t\t}\n  // \t}\n  // \trenderDetails() {\n  // \t\treturn (\n  // \t\t\t<div className='ui segments'>\n  // \t\t\t\t<div className='ui segment'>\n  // \t\t\t\t\t<p>Plan:{this.state.Plan}</p>\n  // \t\t\t\t</div>\n  // \t\t\t\t<div className='ui red segment'>\n  // \t\t\t\t\t<p>Name:{this.state.Name}</p>\n  // \t\t\t\t</div>\n  // \t\t\t\t<div className='ui blue segment'>\n  // \t\t\t\t\t<p>Age(in yrs):{this.state.Age}</p>\n  // \t\t\t\t</div>\n  // \t\t\t\t<div className='ui green segment'>\n  // \t\t\t\t\t<p>Weight(in KG):{this.state.Weight}</p>\n  // \t\t\t\t</div>\n  // \t\t\t\t<div className='ui yellow segment'>\n  // \t\t\t\t\t<p> Height(in cm):{this.state.Height}</p>\n  // \t\t\t\t</div>\n  // \t\t\t\t<div className='ui yellow segment'>\n  // \t\t\t\t\t<p> Waist(in cm): {this.state.waist}</p>\n  // \t\t\t\t</div>\n  // \t\t\t\t<div className='ui yellow segment'>\n  // \t\t\t\t\t<p>Hip(in cm):{this.state.hip}</p>\n  // \t\t\t\t</div>\n  // \t\t\t\t<div className='ui yellow segment'>\n  // \t\t\t\t\t<p>gender: {this.state.Sex}</p>\n  // \t\t\t\t</div>\n  // \t\t\t\t<div className='ui blue segment'>\n  // \t\t\t\t\t<p>BMI: {this.state.bmi}</p>\n  // \t\t\t\t</div>\n  // \t\t\t\t<div className='ui blue segment'>\n  // \t\t\t\t\t<p>According to BMI: {this.state.typeOfPerson}</p>\n  // \t\t\t\t</div>\n  // \t\t\t\t<div className='ui blue segment'>\n  // \t\t\t\t\t<p>\n  // \t\t\t\t\t\tDisease Risk (like type 2 diabetes,hypertension,CVD):{\" \"}\n  // \t\t\t\t\t\t{this.state.diseaseRisk}\n  // \t\t\t\t\t</p>\n  // \t\t\t\t</div>\n  // \t\t\t</div>\n  // \t\t);\n  // \t}\n  // \trenderFoodDetails() {\n  // \t\tif (this.state.calcium === 0 || this.state.calcium === undefined) {\n  // \t\t\treturn (\n  // \t\t\t\t<div className='ui blue segment'>\n  // \t\t\t\t\tSearched Result Will Appear here !!\n  // \t\t\t\t</div>\n  // \t\t\t);\n  // \t\t}\n  // \t\t{\n  // \t\t\treturn (\n  // \t\t\t\t<div className='ui segments'>\n  // \t\t\t\t\t<div className='ui segment'>\n  // \t\t\t\t\t\t<p>calcium:{this.state.calcium}</p>\n  // \t\t\t\t\t</div>\n  // \t\t\t\t\t<div className='ui red segment'>\n  // \t\t\t\t\t\t<p>carbohydrt:{this.state.carbohydrt}</p>\n  // \t\t\t\t\t</div>\n  // \t\t\t\t\t<div className='ui blue segment'>\n  // \t\t\t\t\t\t<p>cholestrl:{this.state.cholestrl}</p>\n  // \t\t\t\t\t</div>\n  // \t\t\t\t\t<div className='ui green segment'>\n  // \t\t\t\t\t\t<p>energy kcal:{this.state.energ_kcal}</p>\n  // \t\t\t\t\t</div>\n  // \t\t\t\t\t<div className='ui yellow segment'>\n  // \t\t\t\t\t\t<p> iron:{this.state.iron}</p>\n  // \t\t\t\t\t</div>\n  // \t\t\t\t\t<div className='ui yellow segment'>\n  // \t\t\t\t\t\t<p> magnesium: {this.state.magnesium}</p>\n  // \t\t\t\t\t</div>\n  // \t\t\t\t\t<div className='ui yellow segment'>\n  // \t\t\t\t\t\t<p>manganese:{this.state.manganese}</p>\n  // \t\t\t\t\t</div>\n  // \t\t\t\t\t<div className='ui yellow segment'>\n  // \t\t\t\t\t\t<p>phosphorus: {this.state.phosphorus}</p>\n  // \t\t\t\t\t</div>\n  // \t\t\t\t\t<div className='ui red segment'>\n  // \t\t\t\t\t\t<p>potassium:{this.state.potassium}</p>\n  // \t\t\t\t\t</div>\n  // \t\t\t\t\t<div className='ui blue segment'>\n  // \t\t\t\t\t\t<p>protein:{this.state.protein}</p>\n  // \t\t\t\t\t</div>\n  // \t\t\t\t\t<div className='ui green segment'>\n  // \t\t\t\t\t\t<p>sodium:{this.state.sodium}</p>\n  // \t\t\t\t\t</div>\n  // \t\t\t\t\t<div className='ui yellow segment'>\n  // \t\t\t\t\t\t<p> vit_a_iu:{this.state.vit_a_iu}</p>\n  // \t\t\t\t\t</div>\n  // \t\t\t\t\t<div className='ui yellow segment'>\n  // \t\t\t\t\t\t<p> vit_b6: {this.state.vit_b6}</p>\n  // \t\t\t\t\t</div>\n  // \t\t\t\t\t<div className='ui yellow segment'>\n  // \t\t\t\t\t\t<p>vit_b12:{this.state.vit_b12}</p>\n  // \t\t\t\t\t</div>\n  // \t\t\t\t\t<div className='ui yellow segment'>\n  // \t\t\t\t\t\t<p>vit_c: {this.state.vit_c}</p>\n  // \t\t\t\t\t</div>\n  // \t\t\t\t\t<div className='ui red segment'>\n  // \t\t\t\t\t\t<p>vit_d:{this.state.vit_d}</p>\n  // \t\t\t\t\t</div>\n  // \t\t\t\t\t<div className='ui blue segment'>\n  // \t\t\t\t\t\t<p>vit_e:{this.state.vit_e}</p>\n  // \t\t\t\t\t</div>\n  // \t\t\t\t\t<div className='ui green segment'>\n  // \t\t\t\t\t\t<p>vit_k:{this.state.vit_k}</p>\n  // \t\t\t\t\t</div>\n  // \t\t\t\t\t<div className='ui yellow segment'>\n  // \t\t\t\t\t\t<p> water:{this.state.water}</p>\n  // \t\t\t\t\t</div>\n  // \t\t\t\t</div>\n  // \t\t\t);\n  // \t\t}\n  // \t}\n\n\n  renderHelper() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }, \"Food Details\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"inputvalueforfooddetails\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.helpplease,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }, \"submit\"));\n  }\n\n  render() {\n    if (!this.props.plan) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      }, \"Loading\");\n    }\n\n    return React.createElement(\"div\", {\n      className: \"orm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }, React.createElement(FoodDetails, {\n      data: this.state.inputvalueforfooddetails,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    plan: state.plans[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchplan\n})(PlanShow);","map":{"version":3,"sources":["/home/himanshu/Desktop/24hack.it/healthcare/client/src/components/plans/PlanShow.js"],"names":["React","connect","fetchplan","FitnessVideos","FoodDetails","bodyMassIndex","require","axios","PlanShow","Component","state","inputfoodvalue","inputvalueforfooddetails","bmi","Age","Weight","Height","Name","Sex","Plan","waist","hip","typeOfPerson","diseaseRisk","helpplease","document","getElementById","value","setState","componentDidMount","props","match","params","id","renderHelper","render","plan","mapStateToProps","ownProps","plans"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,QAA0B,qBAA1B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,WAAP,MAAwB,yBAAxB;;AACA,MAAMC,aAAa,GAAGC,OAAO,CAAC,iBAAD,CAA7B;;AACA,MAAMC,KAAK,GAAGD,OAAO,CAAC,OAAD,CAArB;;AACA,MAAME,QAAN,SAAuBR,KAAK,CAACS,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACtCC,KADsC,GAC9B;AACPC,MAAAA,cAAc,EAAE,IADT;AAEPC,MAAAA,wBAAwB,EAAE,IAFnB;AAGPC,MAAAA,GAAG,EAAE,CAHE;AAIPC,MAAAA,GAAG,EAAE,CAJE;AAKPC,MAAAA,MAAM,EAAE,CALD;AAMPC,MAAAA,MAAM,EAAE,CAND;AAOPC,MAAAA,IAAI,EAAE,CAPC;AAQPC,MAAAA,GAAG,EAAE,CARE;AASPC,MAAAA,IAAI,EAAE,CATC;AAUPC,MAAAA,KAAK,EAAE,CAVA;AAWPC,MAAAA,GAAG,EAAE,CAXE;AAYPC,MAAAA,YAAY,EAAE,CAZP;AAaPC,MAAAA,WAAW,EAAE;AAbN,KAD8B;;AAAA,SAsOtCC,UAtOsC,GAsOzB,MAAM;AAClB,UAAIC,QAAQ,CAACC,cAAT,CAAwB,0BAAxB,EAAoDC,KAApD,IAA6D,IAAjE,EAAuE;AACtE,aAAKC,QAAL,CAAc;AACbhB,UAAAA,wBAAwB,EAAEa,QAAQ,CAACC,cAAT,CACzB,0BADyB,EAExBC;AAHW,SAAd;AAKA;AACD,KA9OqC;AAAA;;AAgBtCE,EAAAA,iBAAiB,GAAG;AACnB,SAAKC,KAAL,CAAW5B,SAAX,CAAqB,KAAK4B,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA7C;AACA,GAlBqC,CAmBtd,WACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADD,EAEC;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,EAAE,EAAC,0BAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFD,EAGC;AAAQ,MAAA,OAAO,EAAE,KAAKV,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHD,CADD;AAOA;;AACDW,EAAAA,MAAM,GAAG;AACR,QAAI,CAAC,KAAKL,KAAL,CAAWM,IAAhB,EAAsB;AACrB,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAP;AACA;;AACD,WACC;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAmBC,oBAAC,WAAD;AAAa,MAAA,IAAI,EAAE,KAAK1B,KAAL,CAAWE,wBAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAnBD,CADD;AAuBA;;AAnRqC;;AAqRvC,MAAMyB,eAAe,GAAG,CAAC3B,KAAD,EAAQ4B,QAAR,KAAqB;AAC5C,SAAO;AACNF,IAAAA,IAAI,EAAE1B,KAAK,CAAC6B,KAAN,CAAYD,QAAQ,CAACP,KAAT,CAAeC,MAAf,CAAsBC,EAAlC;AADA,GAAP;AAGA,CAJD;;AAKA,eAAehC,OAAO,CACrBoC,eADqB,EAErB;AAAEnC,EAAAA;AAAF,CAFqB,CAAP,CAGbM,QAHa,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchplan } from \"../../actions/index\";\nimport FitnessVideos from \"./FitnessVideos\";\nimport FoodDetails from \"./FoodDetailsWhenCalled\";\nconst bodyMassIndex = require(\"body-mass-index\");\nconst axios = require(\"axios\");\nclass PlanShow extends React.Component {\n\tstate = {\n\t\tinputfoodvalue: null,\n\t\tinputvalueforfooddetails: null,\n\t\tbmi: 0,\n\t\tAge: 0,\n\t\tWeight: 0,\n\t\tHeight: 0,\n\t\tName: 0,\n\t\tSex: 0,\n\t\tPlan: 0,\n\t\twaist: 0,\n\t\thip: 0,\n\t\ttypeOfPerson: 0,\n\t\tdiseaseRisk: 0\n\t};\n\tcomponentDidMount() {\n\t\tthis.props.fetchplan(this.props.match.params.id);\n\t}\n\t// componentDidUpdate() {\n\t// \tthis.getUserDetails();\n\t// }\n\t// \trenderErrors() {\n\t// \t\tconsole.log(\"Null value or click again\");\n\t// \t}\n\t// \tgetUserDetails() {\n\t// \t\tif (!this.props.plan) {\n\t// \t\t\treturn <div>Loading</div>;\n\t// \t\t}\n\t// \t\tthis.setState({\n\t// \t\t\tPlan: this.props.plan.Plan,\n\t// \t\t\tAge: this.props.plan.Age,\n\t// \t\t\tWeight: this.props.plan.Weight,\n\t// \t\t\tHeight: this.props.plan.Height,\n\t// \t\t\tName: this.props.plan.Name,\n\t// \t\t\tSex: this.props.plan.Sex,\n\t// \t\t\twaist: this.props.plan.waist,\n\t// \t\t\thip: this.props.plan.hip\n\t// \t\t});\n\n\t// \t\t{\n\t// \t\t\tconst bmi = bodyMassIndex(\n\t// \t\t\t\t`${this.state.Weight} kg`,\n\t// \t\t\t\t`${this.state.Height} cm`\n\t// \t\t\t);\n\n\t// \t\t\tif (bmi < 18.5) {\n\t// \t\t\t\tthis.setState({ typeOfPerson: \"Underweight\" });\n\t// \t\t\t\tthis.setState({ diseaseRisk: \"No Risk \" });\n\t// \t\t\t}\n\t// \t\t\tif (bmi > 18.5 && bmi < 24.9) {\n\t// \t\t\t\tthis.setState({ typeOfPerson: \"Normal\" });\n\t// \t\t\t\tthis.setState({ diseaseRisk: \"No Risk\" });\n\t// \t\t\t}\n\t// \t\t\tif (bmi > 25.0 && bmi < 29.9) {\n\t// \t\t\t\tthis.setState({ typeOfPerson: \"Overweight\" });\n\t// \t\t\t\tif (\n\t// \t\t\t\t\t(this.state.Sex == \"m\" && this.state.waist <= 40) ||\n\t// \t\t\t\t\t(this.state.Sex == \"f\" && this.state.waist <= 35)\n\t// \t\t\t\t) {\n\t// \t\t\t\t\tthis.setState({ diseaseRisk: \"Increased\" });\n\t// \t\t\t\t}\n\t// \t\t\t\tif (\n\t// \t\t\t\t\t(this.state.Sex == \"m\" && this.state.waist >= 40) ||\n\t// \t\t\t\t\t(this.state.Sex == \"f\" && this.state.waist >= 35)\n\t// \t\t\t\t) {\n\t// \t\t\t\t\tthis.setState({ diseaseRisk: \"High \" });\n\t// \t\t\t\t}\n\t// \t\t\t}\n\t// \t\t\tif (bmi > 30.0 && bmi < 34.9) {\n\t// \t\t\t\tthis.setState({ typeOfPerson: \"Obesity class I\" });\n\t// \t\t\t\tif (\n\t// \t\t\t\t\t(this.state.Sex == \"m\" && this.state.waist <= 40) ||\n\t// \t\t\t\t\t(this.state.Sex == \"f\" && this.state.waist <= 35)\n\t// \t\t\t\t) {\n\t// \t\t\t\t\tthis.setState({ diseaseRisk: \"high \" });\n\t// \t\t\t\t}\n\t// \t\t\t\tif (\n\t// \t\t\t\t\t(this.state.Sex == \"m\" && this.state.waist >= 40) ||\n\t// \t\t\t\t\t(this.state.Sex == \"f\" && this.state.waist >= 35)\n\t// \t\t\t\t) {\n\t// \t\t\t\t\tthis.setState({ diseaseRisk: \"Very high\" });\n\t// \t\t\t\t}\n\t// \t\t\t}\n\t// \t\t\tif (bmi > 35.0 && bmi < 39.9) {\n\t// \t\t\t\tthis.setState({ typeOfPerson: \"Obesity class II\" });\n\t// \t\t\t\tif (\n\t// \t\t\t\t\t(this.state.Sex == \"m\" && this.state.waist <= 40) ||\n\t// \t\t\t\t\t(this.state.Sex == \"f\" && this.state.waist <= 35)\n\t// \t\t\t\t) {\n\t// \t\t\t\t\tthis.setState({ diseaseRisk: \"very High\" });\n\t// \t\t\t\t}\n\t// \t\t\t\tif (\n\t// \t\t\t\t\t(this.state.Sex == \"m\" && this.state.waist >= 40) ||\n\t// \t\t\t\t\t(this.state.Sex == \"f\" && this.state.waist >= 35)\n\t// \t\t\t\t) {\n\t// \t\t\t\t\tthis.setState({ diseaseRisk: \"very high\" });\n\t// \t\t\t\t}\n\t// \t\t\t}\n\t// \t\t\tif (bmi > 40) {\n\t// \t\t\t\tthis.setState({ typeOfPerson: \"Extreme Obesity\" });\n\t// \t\t\t\tif (\n\t// \t\t\t\t\t(this.state.Sex == \"m\" && this.state.waist <= 40) ||\n\t// \t\t\t\t\t(this.state.Sex == \"f\" && this.state.waist <= 35)\n\t// \t\t\t\t) {\n\t// \t\t\t\t\tthis.setState({ diseaseRisk: \"Extreme High\" });\n\t// \t\t\t\t}\n\t// \t\t\t\tif (\n\t// \t\t\t\t\t(this.state.Sex == \"m\" && this.state.waist <= 40) ||\n\t// \t\t\t\t\t(this.state.Sex == \"f\" && this.state.waist <= 35)\n\t// \t\t\t\t) {\n\t// \t\t\t\t\tthis.setState({ diseaseRisk: \"Extreme High\" });\n\t// \t\t\t\t}\n\t// \t\t\t}\n\t// \t\t}\n\t// \t}\n\t// \trenderDetails() {\n\t// \t\treturn (\n\t// \t\t\t<div className='ui segments'>\n\t// \t\t\t\t<div className='ui segment'>\n\t// \t\t\t\t\t<p>Plan:{this.state.Plan}</p>\n\t// \t\t\t\t</div>\n\t// \t\t\t\t<div className='ui red segment'>\n\t// \t\t\t\t\t<p>Name:{this.state.Name}</p>\n\t// \t\t\t\t</div>\n\t// \t\t\t\t<div className='ui blue segment'>\n\t// \t\t\t\t\t<p>Age(in yrs):{this.state.Age}</p>\n\t// \t\t\t\t</div>\n\t// \t\t\t\t<div className='ui green segment'>\n\t// \t\t\t\t\t<p>Weight(in KG):{this.state.Weight}</p>\n\t// \t\t\t\t</div>\n\t// \t\t\t\t<div className='ui yellow segment'>\n\t// \t\t\t\t\t<p> Height(in cm):{this.state.Height}</p>\n\t// \t\t\t\t</div>\n\t// \t\t\t\t<div className='ui yellow segment'>\n\t// \t\t\t\t\t<p> Waist(in cm): {this.state.waist}</p>\n\t// \t\t\t\t</div>\n\t// \t\t\t\t<div className='ui yellow segment'>\n\t// \t\t\t\t\t<p>Hip(in cm):{this.state.hip}</p>\n\t// \t\t\t\t</div>\n\t// \t\t\t\t<div className='ui yellow segment'>\n\t// \t\t\t\t\t<p>gender: {this.state.Sex}</p>\n\t// \t\t\t\t</div>\n\t// \t\t\t\t<div className='ui blue segment'>\n\t// \t\t\t\t\t<p>BMI: {this.state.bmi}</p>\n\t// \t\t\t\t</div>\n\t// \t\t\t\t<div className='ui blue segment'>\n\t// \t\t\t\t\t<p>According to BMI: {this.state.typeOfPerson}</p>\n\t// \t\t\t\t</div>\n\t// \t\t\t\t<div className='ui blue segment'>\n\t// \t\t\t\t\t<p>\n\t// \t\t\t\t\t\tDisease Risk (like type 2 diabetes,hypertension,CVD):{\" \"}\n\t// \t\t\t\t\t\t{this.state.diseaseRisk}\n\t// \t\t\t\t\t</p>\n\t// \t\t\t\t</div>\n\t// \t\t\t</div>\n\t// \t\t);\n\t// \t}\n\t// \trenderFoodDetails() {\n\t// \t\tif (this.state.calcium === 0 || this.state.calcium === undefined) {\n\t// \t\t\treturn (\n\t// \t\t\t\t<div className='ui blue segment'>\n\t// \t\t\t\t\tSearched Result Will Appear here !!\n\t// \t\t\t\t</div>\n\t// \t\t\t);\n\t// \t\t}\n\t// \t\t{\n\t// \t\t\treturn (\n\t// \t\t\t\t<div className='ui segments'>\n\t// \t\t\t\t\t<div className='ui segment'>\n\t// \t\t\t\t\t\t<p>calcium:{this.state.calcium}</p>\n\t// \t\t\t\t\t</div>\n\t// \t\t\t\t\t<div className='ui red segment'>\n\t// \t\t\t\t\t\t<p>carbohydrt:{this.state.carbohydrt}</p>\n\t// \t\t\t\t\t</div>\n\t// \t\t\t\t\t<div className='ui blue segment'>\n\t// \t\t\t\t\t\t<p>cholestrl:{this.state.cholestrl}</p>\n\t// \t\t\t\t\t</div>\n\t// \t\t\t\t\t<div className='ui green segment'>\n\t// \t\t\t\t\t\t<p>energy kcal:{this.state.energ_kcal}</p>\n\t// \t\t\t\t\t</div>\n\t// \t\t\t\t\t<div className='ui yellow segment'>\n\t// \t\t\t\t\t\t<p> iron:{this.state.iron}</p>\n\t// \t\t\t\t\t</div>\n\t// \t\t\t\t\t<div className='ui yellow segment'>\n\t// \t\t\t\t\t\t<p> magnesium: {this.state.magnesium}</p>\n\t// \t\t\t\t\t</div>\n\t// \t\t\t\t\t<div className='ui yellow segment'>\n\t// \t\t\t\t\t\t<p>manganese:{this.state.manganese}</p>\n\t// \t\t\t\t\t</div>\n\t// \t\t\t\t\t<div className='ui yellow segment'>\n\t// \t\t\t\t\t\t<p>phosphorus: {this.state.phosphorus}</p>\n\t// \t\t\t\t\t</div>\n\t// \t\t\t\t\t<div className='ui red segment'>\n\t// \t\t\t\t\t\t<p>potassium:{this.state.potassium}</p>\n\t// \t\t\t\t\t</div>\n\t// \t\t\t\t\t<div className='ui blue segment'>\n\t// \t\t\t\t\t\t<p>protein:{this.state.protein}</p>\n\t// \t\t\t\t\t</div>\n\t// \t\t\t\t\t<div className='ui green segment'>\n\t// \t\t\t\t\t\t<p>sodium:{this.state.sodium}</p>\n\t// \t\t\t\t\t</div>\n\t// \t\t\t\t\t<div className='ui yellow segment'>\n\t// \t\t\t\t\t\t<p> vit_a_iu:{this.state.vit_a_iu}</p>\n\t// \t\t\t\t\t</div>\n\t// \t\t\t\t\t<div className='ui yellow segment'>\n\t// \t\t\t\t\t\t<p> vit_b6: {this.state.vit_b6}</p>\n\t// \t\t\t\t\t</div>\n\t// \t\t\t\t\t<div className='ui yellow segment'>\n\t// \t\t\t\t\t\t<p>vit_b12:{this.state.vit_b12}</p>\n\t// \t\t\t\t\t</div>\n\t// \t\t\t\t\t<div className='ui yellow segment'>\n\t// \t\t\t\t\t\t<p>vit_c: {this.state.vit_c}</p>\n\t// \t\t\t\t\t</div>\n\t// \t\t\t\t\t<div className='ui red segment'>\n\t// \t\t\t\t\t\t<p>vit_d:{this.state.vit_d}</p>\n\t// \t\t\t\t\t</div>\n\t// \t\t\t\t\t<div className='ui blue segment'>\n\t// \t\t\t\t\t\t<p>vit_e:{this.state.vit_e}</p>\n\t// \t\t\t\t\t</div>\n\t// \t\t\t\t\t<div className='ui green segment'>\n\t// \t\t\t\t\t\t<p>vit_k:{this.state.vit_k}</p>\n\t// \t\t\t\t\t</div>\n\t// \t\t\t\t\t<div className='ui yellow segment'>\n\t// \t\t\t\t\t\t<p> water:{this.state.water}</p>\n\t// \t\t\t\t\t</div>\n\t// \t\t\t\t</div>\n\t// \t\t\t);\n\t// \t\t}\n\t// \t}\n\thelpplease = () => {\n\t\tif (document.getElementById(\"inputvalueforfooddetails\").value != null) {\n\t\t\tthis.setState({\n\t\t\t\tinputvalueforfooddetails: document.getElementById(\n\t\t\t\t\t\"inputvalueforfooddetails\"\n\t\t\t\t).value\n\t\t\t});\n\t\t}\n\t};\n\trenderHelper() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<label>Food Details</label>\n\t\t\t\t<input type='text' id='inputvalueforfooddetails'></input>\n\t\t\t\t<button onClick={this.helpplease}>submit</button>\n\t\t\t</div>\n\t\t);\n\t}\n\trender() {\n\t\tif (!this.props.plan) {\n\t\t\treturn <div>Loading</div>;\n\t\t}\n\t\treturn (\n\t\t\t<div className='orm'>\n\t\t\t\t{/* <div className='field'>\n\t\t\t\t\t<label className='ui  text'>\n\t\t\t\t\t\tPlace for Exercise (inside or outside)\n\t\t\t\t\t</label>\n\t\t\t\t\t<input style={{ width: 900 }} type='text' id='input2'></input>\n\t\t\t\t</div>\n\t\t\t\t<button\n\t\t\t\t\tclassName='ui  button primary'\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\tinputfoodvalue: document.getElementById(\"input\").value,\n\t\t\t\t\t\t\tplaceForExercise:\n\t\t\t\t\t\t\t\tdocument.getElementById(\"input2\").value || \"inside\"\n\t\t\t\t\t\t});\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\tSubmit\n\t\t\t\t</button> } */}\n\t\t\t\t<FoodDetails data={this.state.inputvalueforfooddetails} />\n\t\t\t</div>\n\t\t);\n\t}\n}\nconst mapStateToProps = (state, ownProps) => {\n\treturn {\n\t\tplan: state.plans[ownProps.match.params.id]\n\t};\n};\nexport default connect(\n\tmapStateToProps,\n\t{ fetchplan }\n)(PlanShow);\n"]},"metadata":{},"sourceType":"module"}